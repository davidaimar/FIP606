{
  "hash": "23784647c7160968da3fedb479d07aa4",
  "result": {
    "markdown": "---\ntitle: \"Obtendo dados através do copiar e colar\"\nformat: html\n---\n\n\nPara obter dados diretamente de tabelas em sites ou qualquer outro documento digital e criar data.frames no R você pode utilizar dois pacotes, o **tibble** e o **datapasta**. Ambos compilam os dados copiados e organizam mantendo o formato original dentro do chunk, uma maneira simples que otimiza o seu `Ctrl + C` & `Ctrl + V`.\n\nUsando o **datapasta**, após copiar três colunas de dados de uma planilha, basta clicar em `Addins...` e `Past as data.frame`.\n\n\n::: {.cell hash='Aula_4_cache/html/unnamed-chunk-1_5c3312328877329fbf8a89b8ab3c5f46'}\n\n```{.r .cell-code}\nlibrary(datapasta)\n\ndat <- data.frame(\n  stringsAsFactors = FALSE, # 'stringsAsFactors' converte variáveis em um data frame para fatores\n              trat = c(\"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\n                       \"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\"Mg2\",\"control\",\n                       \"control\",\"control\",\"control\",\"control\",\"control\",\"control\",\n                       \"control\",\"control\",\"control\"),\n               rep = c(1L,2L,3L,4L,5L,6L,7L,8L,\n                       9L,10L,1L,2L,3L,4L,5L,6L,7L,8L,9L,10L),\n              comp = c(9,12.5,10,8,13.2,11,10.8,\n                       9.5,10.8,10.4,13.72,15.91,15.7,14.2,15.9,16.54,\n                       18,14.4,16.41,16)\n)\ndat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      trat rep  comp\n1      Mg2   1  9.00\n2      Mg2   2 12.50\n3      Mg2   3 10.00\n4      Mg2   4  8.00\n5      Mg2   5 13.20\n6      Mg2   6 11.00\n7      Mg2   7 10.80\n8      Mg2   8  9.50\n9      Mg2   9 10.80\n10     Mg2  10 10.40\n11 control   1 13.72\n12 control   2 15.91\n13 control   3 15.70\n14 control   4 14.20\n15 control   5 15.90\n16 control   6 16.54\n17 control   7 18.00\n18 control   8 14.40\n19 control   9 16.41\n20 control  10 16.00\n```\n:::\n:::\n\n\nAgora, com o pacote **tibble**, basta clicar em `Addins...` e `Past as tribble`.\n\n\n::: {.cell hash='Aula_4_cache/html/unnamed-chunk-2_86c88f4c3319fb0e24dceec4f374326d'}\n\n```{.r .cell-code}\nlibrary(tibble)\n\ndat2 <- tribble(\n      ~trat, ~rep, ~comp,\n      \"Mg2\",   1L,     9,\n      \"Mg2\",   2L,  12.5,\n      \"Mg2\",   3L,    10,\n      \"Mg2\",   4L,     8,\n      \"Mg2\",   5L,  13.2,\n      \"Mg2\",   6L,    11,\n      \"Mg2\",   7L,  10.8,\n      \"Mg2\",   8L,   9.5,\n      \"Mg2\",   9L,  10.8,\n      \"Mg2\",  10L,  10.4,\n  \"control\",   1L, 13.72,\n  \"control\",   2L, 15.91,\n  \"control\",   3L,  15.7,\n  \"control\",   4L,  14.2,\n  \"control\",   5L,  15.9,\n  \"control\",   6L, 16.54,\n  \"control\",   7L,    18,\n  \"control\",   8L,  14.4,\n  \"control\",   9L, 16.41,\n  \"control\",  10L,    16\n  )\ndat2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 20 × 3\n   trat      rep  comp\n   <chr>   <int> <dbl>\n 1 Mg2         1   9  \n 2 Mg2         2  12.5\n 3 Mg2         3  10  \n 4 Mg2         4   8  \n 5 Mg2         5  13.2\n 6 Mg2         6  11  \n 7 Mg2         7  10.8\n 8 Mg2         8   9.5\n 9 Mg2         9  10.8\n10 Mg2        10  10.4\n11 control     1  13.7\n12 control     2  15.9\n13 control     3  15.7\n14 control     4  14.2\n15 control     5  15.9\n16 control     6  16.5\n17 control     7  18  \n18 control     8  14.4\n19 control     9  16.4\n20 control    10  16  \n```\n:::\n\n```{.r .cell-code}\n# 'dat' e 'dat2' são iguais, o que muda é a forma de vizualização dos dados no chunk.\n```\n:::\n\n\nVeja mais esse exemplo, com o **tribble**, de um conjunto de dados disponível [aqui](https://escritacientifica.sc.usp.br/estatisticas/estatisticas-por-paises/):\n\n\n::: {.cell hash='Aula_4_cache/html/unnamed-chunk-3_9c9ed24309eda6a36f4606179681e7dc'}\n\n```{.r .cell-code}\nvisitas <- tribble(\n        ~`codigo`,            ~país,    ~`n2`,\n               1L,         \"Brazil\",    4303L,\n               2L,     \"Mozambique\",      43L,\n               3L,       \"Portugal\",      33L,\n               4L,  \"United States\",      23L,\n               5L,         \"Angola\",      19L,\n               6L,          \"Spain\",      16L,\n               7L,      \"(not set)\",      12L,\n               8L,       \"Colombia\",       8L,\n               9L,        \"Germany\",       5L,\n              10L,        \"Hungary\",       5L,\n              11L, \"United Kingdom\",       5L,\n              12L,    \"Netherlands\",       4L,\n              13L,        \"Ecuador\",       3L,\n              14L,         \"France\",       3L,\n              15L,          \"Chile\",       2L,\n              16L,       \"Paraguay\",       2L,\n              17L,           \"Peru\",       2L,\n              18L,      \"Argentina\",       1L,\n              19L,        \"Austria\",       1L,\n              20L,        \"Bolivia\",       1L,\n              21L,     \"Cape Verde\",       1L,\n              22L,          \"China\",       1L,\n              23L,          \"Egypt\",       1L,\n              24L,        \"Finland\",       1L,\n              25L,          \"India\",       1L,\n              26L,          \"Italy\",       1L,\n              27L,       \"Malaysia\",       1L,\n              28L,       \"Pakistan\",       1L,\n              29L,         \"Poland\",       1L,\n              30L,      \"Singapore\",       1L,\n              31L,    \"Timor-Leste\",       1L,\n              32L,        \"Uruguay\",       1L\n             )\nvisitas\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 32 × 3\n   codigo país             n2\n    <int> <chr>         <int>\n 1      1 Brazil         4303\n 2      2 Mozambique       43\n 3      3 Portugal         33\n 4      4 United States    23\n 5      5 Angola           19\n 6      6 Spain            16\n 7      7 (not set)        12\n 8      8 Colombia          8\n 9      9 Germany           5\n10     10 Hungary           5\n# ℹ 22 more rows\n```\n:::\n:::\n\n\n# Outros tipos de gráficos\n\n## Montando gráfico à partir de um data frame criado\n\n\n::: {.cell hash='Aula_4_cache/html/unnamed-chunk-4_f42e2094f0eb9e9b899ae3600c450e3d'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\npepper <- \n  tribble(\n   ~t,  ~`1`,  ~`2`,  ~`3`,\n   0,  0.08, 0.001, 0.001,\n   7,  0.13,  0.01, 0.001,\n  14,  0.78,  0.09,  0.01,\n  21,  0.92,  0.25,  0.05,\n  28,  0.99,   0.8,  0.18,\n  35, 0.995,  0.98,  0.34,\n  42, 0.999,  0.99,  0.48,\n  49, 0.999, 0.999,  0.74\n  ) \n```\n:::\n\n\nFazendo o uso da função `pivot_longer()` para modificar a aquitetura dos dados de uma maneira em que cada observação ocupa uma linha separada em uma tabela, e diferentes medidas ou variáveis sejam armazenadas em colunas diferentes, o \"formato longo\", e criando um gráfico de linhas e pontos.\n\n\n::: {.cell hash='Aula_4_cache/html/unnamed-chunk-5_5c95d4cb518c660e56fa1a5873f691ef'}\n\n```{.r .cell-code}\npepper |>\n  pivot_longer(2:4,\n               names_to = \"epidemic\",\n               values_to = \"inc\") |> \n  ggplot(aes(t, inc, color = epidemic))+\n  geom_point()+\n  geom_line()+\n  annotate(geom = \"text\",\n           x = 12,\n           y = 0.79,\n           label = \"1\")+\nannotate(geom = \"text\",\n           x = 26,\n           y = 0.80,\n           label = \"2\")+\n  annotate(geom = \"text\",\n           x = 47,\n           y = 0.76,\n           label = \"3\")+\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](Aula_4_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## Tabela de Contigência\n\nVeja como criar uma tabela de contigência à partir de dados disponíveis em um documento online no formato CSV.\n\nO pacote **janitor** será usado para limpeza e organização de dados. A função `tabyl()` cria tabelas de frequência cruzada. Aqui, iremos criar uma tabela de contagem de combinações únicas das variáveis \"cultivar\" e \"farm_management\".\n\n\n::: {.cell hash='Aula_4_cache/html/unnamed-chunk-6_f62e8d73252c09833de63845bdb3a06a'}\n\n```{.r .cell-code}\nlibrary(ggthemes)\n\ncr <- read_csv(\"https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv\")\n\n\nlibrary(janitor)\ncr |> \n  tabyl(cultivar, farm_management)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n cultivar Intensive Minimal Moderate Unmanaged\n Improved        83       0        0         0\n    Local         0      10        4       102\n  Mixture        82      59       65         0\n```\n:::\n\n```{.r .cell-code}\ncr |> \n  count(farm_management, cultivar) |> \n  ggplot(aes(cultivar, n, fill = farm_management,\n             label = n))+\n  geom_col(position = \"dodge2\")+\n  scale_fill_canva()+\n  theme_bw()+\n  theme(strip.text.x = element_blank(),\n        legend.position = \"top\")+\n  geom_text(position = position_dodge(width = 0.9))+\n  facet_wrap(~cultivar, scales = \"free_x\")\n```\n\n::: {.cell-output-display}\n![](Aula_4_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nOs dados são de uma pesquisa sobre ferrugem do café na Etiópia e contam as ocorrências de diferentes combinações de métodos de gestão agrícola (`farm_management`) e cultivares (`cultivar`), e visualiza essas contagens em um gráfico de barras facetado por cultivar, com barras coloridas por método de gestão agrícola.\n\n## Medidas de tendência central em gráficos\n\nAqui veremos uma maneira de, à partir de dados importados, ralizar cálculos estatísticos (média e desvio padrão) agrupados por uma variável, e então visualiza os resultados em um gráfico.\n\nVamos usar o `geom_errorbar()` para adicionar barras de erro ao gráfico, representando a variação de um desvio padrão acima e abaixo da média, com largura das barras definida como 0.1.\n\n\n::: {.cell hash='Aula_4_cache/html/unnamed-chunk-7_838cfa809c51cab4aaa8cfea9c5415a3'}\n\n```{.r .cell-code}\nlibrary(gsheet)\nmg <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137\")\n\nmg |> \n  group_by(trat) |> \n  summarise(mean_comp = mean(comp), sd_comp = sd(comp))|> \n  ggplot(aes(trat, mean_comp))+\n  geom_point(size = 3)+\n  ylim(5,20)+ # Define os limites do eixo y de 5 a 20\n  geom_errorbar(aes(ymin = mean_comp - sd_comp,\n                    ymax = mean_comp + sd_comp), width = 0.1)+\n  annotate (geom = \"text\",\n           x = 1, y = 17.5,\n           label = '*')\n```\n\n::: {.cell-output-display}\n![](Aula_4_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# 'group_by(trat)': Agrupa os dados pela coluna trat (tratamento).\n# 'summarise(mean_comp = mean(comp), sd_comp = sd(comp))': Calcula a média (mean()) e o desvio padrão (sd()) da coluna comp para cada grupo de trat.\n```\n:::\n\n\nCom os mesmos dados, podemos ainda, criae um gráfico de dispersão (`jitter plot`), que mostra a distribuição dos valores de comp para diferentes níveis de tratatamento.\n\n\n::: {.cell hash='Aula_4_cache/html/unnamed-chunk-8_0b716d6e6489146b94943c2a8c8b204a'}\n\n```{.r .cell-code}\nmg |> \n  ggplot(aes(trat, comp))+\n  geom_jitter(width = 0.1)\n```\n\n::: {.cell-output-display}\n![](Aula_4_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}