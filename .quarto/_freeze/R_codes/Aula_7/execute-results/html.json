{
  "hash": "27a060c9dd2922df96b50a80b38b103f",
  "result": {
    "markdown": "---\ntitle: \"Aula_7\"\nformat: html\neditor_options: \n  chunk_output_type: console\n---\n\n\n#Aula: 08/05\n\n##Anova com blocos ao acaso \\### Pacotes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(gsheet)\nlibrary(patchwork)\nlibrary(ggthemes)\nlibrary(performance)\nlibrary(emmeans)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWelcome to emmeans.\nCaution: You lose important information if you filter this package's results.\nSee '? untidy'\n```\n:::\n\n```{.r .cell-code}\nlibrary(multcomp)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: mvtnorm\nCarregando pacotes exigidos: survival\nCarregando pacotes exigidos: TH.data\nCarregando pacotes exigidos: MASS\n\nAttaching package: 'MASS'\n\nThe following object is masked from 'package:patchwork':\n\n    area\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\n\nAttaching package: 'TH.data'\n\nThe following object is masked from 'package:MASS':\n\n    geyser\n```\n:::\n\n```{.r .cell-code}\nlibrary(agricolae)\nlibrary(DHARMa)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nThis is DHARMa 0.4.6. For overview type '?DHARMa'. For recent changes, type news(package = 'DHARMa')\n```\n:::\n\n```{.r .cell-code}\nlibrary(MASS)\nlibrary(writexl)\nlibrary(knitr)\nlibrary(readxl)\nlibrary(epifitter)\n```\n:::\n\n\n### Importar dados\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsoja <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=866852711\")\n\nsoja <- soja |> \n  mutate(TRAT = as.factor(TRAT), BLOCO = as.factor(BLOCO))\n```\n:::\n\n\n### Vizualizar\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndfc <- soja |> \n  ggplot(aes(TRAT, DFC))+\n  geom_jitter(width = 0.1, color = 'gray')+\n  stat_summary(fun.data = \"mean_cl_boot\", color = 'black', alpha = 0.5)+\n  theme_few()\n\n\nfer <- soja |> \n  ggplot(aes(TRAT, FER))+\n  geom_jitter(width = 0.1, color = 'gray')+\n  stat_summary(fun.data = \"mean_cl_boot\", color = 'black', alpha = 0.5)+\n  theme_few()\n\nprod <- soja |> \n  ggplot(aes(TRAT, PROD))+\n  geom_jitter(width = 0.1, color = 'gray')+\n  stat_summary(fun.data = \"mean_cl_boot\", color = 'black', alpha = 0.5)+\n  theme_few()\n\ndfc + fer + prod\n```\n\n::: {.cell-output-display}\n![](Aula_7_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n### ANOVA (DBC)\n\n\n::: {.cell}\n\n```{.r .cell-code}\naov_dfc <- lm (DFC ~ TRAT + BLOCO, data = soja)\n\nanova(aov_dfc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: DFC\n          Df  Sum Sq Mean Sq F value    Pr(>F)    \nTRAT       7 149.299 21.3284 51.5490 8.218e-12 ***\nBLOCO      3   0.461  0.1537  0.3716    0.7743    \nResiduals 21   8.689  0.4138                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\ncheck_normality(aov_dfc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: residuals appear as normally distributed (p = 0.978).\n```\n:::\n\n```{.r .cell-code}\ncheck_heteroscedasticity(aov_dfc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: Error variance appears to be homoscedastic (p = 0.532).\n```\n:::\n\n```{.r .cell-code}\nmedias_dfc <- emmeans(aov_dfc, ~ TRAT)\n\nmedias_dfc\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n TRAT emmean    SE df lower.CL upper.CL\n 1     10.88 0.322 21    10.21    11.54\n 2      6.42 0.322 21     5.76     7.09\n 3      6.05 0.322 21     5.38     6.72\n 4      4.75 0.322 21     4.08     5.42\n 5      4.20 0.322 21     3.53     4.87\n 6      4.00 0.322 21     3.33     4.67\n 7      4.08 0.322 21     3.41     4.74\n 8      4.58 0.322 21     3.91     5.24\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \n```\n:::\n\n```{.r .cell-code}\npwpm(medias_dfc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        1       2       3       4       5       6       7       8\n1 [10.87]  <.0001  <.0001  <.0001  <.0001  <.0001  <.0001  <.0001\n2   4.450 [ 6.42]  0.9896  0.0249  0.0017  0.0006  0.0009  0.0107\n3   4.825   0.375 [ 6.05]  0.1329  0.0107  0.0040  0.0058  0.0628\n4   6.125   1.675   1.300 [ 4.75]  0.9202  0.7173  0.8072  0.9999\n5   6.675   2.225   1.850   0.550 [ 4.20]  0.9998  1.0000  0.9896\n6   6.875   2.425   2.050   0.750   0.200 [ 4.00]  1.0000  0.9020\n7   6.800   2.350   1.975   0.675   0.125  -0.075 [ 4.07]  0.9499\n8   6.300   1.850   1.475   0.175  -0.375  -0.575  -0.500 [ 4.57]\n\nRow and column labels: TRAT\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean) \nLower triangle: Comparisons (estimate)   earlier vs. later\n```\n:::\n\n```{.r .cell-code}\ncld(medias_dfc, Letters = letters)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n TRAT emmean    SE df lower.CL upper.CL .group\n 6      4.00 0.322 21     3.33     4.67  a    \n 7      4.08 0.322 21     3.41     4.74  a    \n 5      4.20 0.322 21     3.53     4.87  a    \n 8      4.58 0.322 21     3.91     5.24  ab   \n 4      4.75 0.322 21     4.08     5.42  ab   \n 3      6.05 0.322 21     5.38     6.72   bc  \n 2      6.42 0.322 21     5.76     7.09    c  \n 1     10.88 0.322 21    10.21    11.54     d \n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 8 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naov_fer <- lm (FER ~ TRAT + BLOCO, data = soja)\n\nanova(aov_fer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: FER\n          Df Sum Sq Mean Sq F value    Pr(>F)    \nTRAT       7 978.87 139.838 55.1717 4.218e-12 ***\nBLOCO      3   3.84   1.279  0.5045    0.6834    \nResiduals 21  53.23   2.535                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\ncheck_normality(aov_fer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nWarning: Non-normality of residuals detected (p = 0.008).\n```\n:::\n\n```{.r .cell-code}\ncheck_heteroscedasticity(aov_fer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nWarning: Heteroscedasticity (non-constant error variance) detected (p < .001).\n```\n:::\n\n```{.r .cell-code}\n## Tranformação por logarítimo\n\nsoja <- soja |> \n  mutate(FER2 = log(FER))\n\naov_fer2 <- lm (FER2 ~ TRAT + BLOCO, data = soja)\n\nanova(aov_fer2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: FER2\n          Df  Sum Sq Mean Sq F value    Pr(>F)    \nTRAT       7 11.5210 1.64585 42.9665 4.838e-11 ***\nBLOCO      3  0.2064 0.06880  1.7961    0.1788    \nResiduals 21  0.8044 0.03831                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\ncheck_normality(aov_fer2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: residuals appear as normally distributed (p = 0.255).\n```\n:::\n\n```{.r .cell-code}\ncheck_heteroscedasticity(aov_fer2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nWarning: Heteroscedasticity (non-constant error variance) detected (p = 0.035).\n```\n:::\n\n```{.r .cell-code}\n## Equivalente não paramétrico da ANOVA\n\nkruskal_fer <-kruskal.test(FER ~ TRAT, data = soja)\n\nkruskal_fer\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tKruskal-Wallis rank sum test\n\ndata:  FER by TRAT\nKruskal-Wallis chi-squared = 19.965, df = 7, p-value = 0.005645\n```\n:::\n\n```{.r .cell-code}\nm_fer <- kruskal(soja$FER,\n          soja$TRAT,\n        group = TRUE)\n\nm_fer\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$statistics\n     Chisq Df     p.chisq  t.value      MSD\n  19.96535  7 0.005645016 2.063899 9.095654\n\n$parameters\n            test p.ajusted    name.t ntr alpha\n  Kruskal-Wallis      none soja$TRAT   8  0.05\n\n$means\n  soja.FER   rank       std r  Min  Max    Q25   Q50    Q75\n1   20.250 30.500 3.5939764 4 17.0 25.0 17.750 19.50 22.000\n2    5.875 25.625 1.7500000 4  4.0  8.0  4.750  5.75  6.875\n3    4.000 16.625 1.4719601 4  2.5  6.0  3.250  3.75  4.500\n4    3.125  9.875 0.6291529 4  2.5  4.0  2.875  3.00  3.250\n5    3.250 11.750 0.2886751 4  3.0  3.5  3.000  3.25  3.500\n6    3.000  8.250 0.4082483 4  2.5  3.5  2.875  3.00  3.125\n7    3.375 13.875 0.2500000 4  3.0  3.5  3.375  3.50  3.500\n8    3.500 15.500 0.4082483 4  3.0  4.0  3.375  3.50  3.625\n\n$comparison\nNULL\n\n$groups\n  soja$FER groups\n1   30.500      a\n2   25.625     ab\n3   16.625     bc\n8   15.500      c\n7   13.875      c\n5   11.750      c\n4    9.875      c\n6    8.250      c\n\nattr(,\"class\")\n[1] \"group\"\n```\n:::\n\n```{.r .cell-code}\n## Tranformação por boxcox\nb <- boxcox(lm(soja$FER+0.1 ~ 1))\n```\n\n::: {.cell-output-display}\n![](Aula_7_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlambda <- b$x[which.max(b$y)]\n\nsoja$FER3 <- (soja$FER ^ lambda - 1) / lambda\n\naov_fer3 <- aov(FER3 ~ TRAT + BLOCO, data = soja)\n\nanova(aov_fer3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: FER3\n          Df   Sum Sq   Mean Sq F value    Pr(>F)    \nTRAT       7 0.036632 0.0052332 12.5567 3.033e-06 ***\nBLOCO      3 0.005360 0.0017865  4.2867    0.0165 *  \nResiduals 21 0.008752 0.0004168                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\ncheck_normality(aov_fer3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: residuals appear as normally distributed (p = 0.790).\n```\n:::\n\n```{.r .cell-code}\ncheck_heteroscedasticity(aov_fer3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: Error variance appears to be homoscedastic (p = 0.834).\n```\n:::\n\n```{.r .cell-code}\nmedias_fer3 <- emmeans(aov_fer3, ~ TRAT)\n\nmedias_fer3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n TRAT emmean     SE df lower.CL upper.CL\n 1     0.621 0.0102 21    0.600    0.642\n 2     0.584 0.0102 21    0.563    0.605\n 3     0.543 0.0102 21    0.522    0.564\n 4     0.519 0.0102 21    0.498    0.540\n 5     0.530 0.0102 21    0.509    0.551\n 6     0.515 0.0102 21    0.494    0.536\n 7     0.536 0.0102 21    0.515    0.557\n 8     0.540 0.0102 21    0.519    0.561\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \n```\n:::\n\n```{.r .cell-code}\npwpm(medias_fer3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         1        2        3        4        5        6        7       8\n1  [0.621]   0.2155   0.0005   <.0001   <.0001   <.0001   0.0002  0.0003\n2  0.03732  [0.584]   0.1390   0.0040   0.0221   0.0021   0.0527  0.0928\n3  0.07823  0.04091  [0.543]   0.7065   0.9822   0.5351   0.9996  1.0000\n4  0.10230  0.06498  0.02407  [0.519]   0.9934   1.0000   0.9312  0.8218\n5  0.09129  0.05397  0.01306 -0.01101  [0.530]   0.9614   0.9999  0.9963\n6  0.10637  0.06905  0.02814  0.00407  0.01508  [0.515]   0.8218  0.6654\n7  0.08538  0.04805  0.00715 -0.01692 -0.00592 -0.02100  [0.536]  1.0000\n8  0.08131  0.04398  0.00308 -0.02100 -0.00999 -0.02507 -0.00407 [0.540]\n\nRow and column labels: TRAT\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean) \nLower triangle: Comparisons (estimate)   earlier vs. later\n```\n:::\n\n```{.r .cell-code}\ncld(medias_fer3, Letters = letters)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n TRAT emmean     SE df lower.CL upper.CL .group\n 6     0.515 0.0102 21    0.494    0.536  a    \n 4     0.519 0.0102 21    0.498    0.540  a    \n 5     0.530 0.0102 21    0.509    0.551  a    \n 7     0.536 0.0102 21    0.515    0.557  ab   \n 8     0.540 0.0102 21    0.519    0.561  ab   \n 3     0.543 0.0102 21    0.522    0.564  ab   \n 2     0.584 0.0102 21    0.563    0.605   bc  \n 1     0.621 0.0102 21    0.600    0.642    c  \n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 8 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naov_prod <- lm (PROD ~ TRAT + BLOCO, data = soja)\n\nanova(aov_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: PROD\n          Df  Sum Sq Mean Sq F value  Pr(>F)  \nTRAT       7 2993906  427701  2.6367 0.04021 *\nBLOCO      3  105665   35222  0.2171 0.88340  \nResiduals 21 3406431  162211                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\ncheck_normality(aov_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: residuals appear as normally distributed (p = 0.542).\n```\n:::\n\n```{.r .cell-code}\ncheck_heteroscedasticity(aov_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: Error variance appears to be homoscedastic (p = 0.215).\n```\n:::\n\n```{.r .cell-code}\nmedias_prod <- emmeans(aov_prod, ~ TRAT)\n\nmedias_prod\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n TRAT emmean  SE df lower.CL upper.CL\n 1      4219 201 21     3800     4638\n 2      4935 201 21     4516     5354\n 3      5110 201 21     4691     5529\n 4      5140 201 21     4721     5559\n 5      5122 201 21     4703     5541\n 6      5256 201 21     4837     5675\n 7      5128 201 21     4709     5546\n 8      5078 201 21     4659     5497\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \n```\n:::\n\n```{.r .cell-code}\npwpm(medias_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        1       2       3       4       5       6       7      8\n1  [4219]  0.2430  0.0792  0.0640  0.0728  0.0272  0.0700 0.0985\n2  -715.8  [4935]  0.9983  0.9953  0.9974  0.9430  0.9968 0.9995\n3  -890.8  -175.0  [5110]  1.0000  1.0000  0.9994  1.0000 1.0000\n4  -921.0  -205.3   -30.3  [5140]  1.0000  0.9999  1.0000 1.0000\n5  -902.8  -187.0   -12.0    18.3  [5122]  0.9997  1.0000 1.0000\n6 -1037.0  -321.3  -146.3  -116.0  -134.3  [5256]  0.9998 0.9981\n7  -908.3  -192.5   -17.5    12.8    -5.5   128.8  [5127] 1.0000\n8  -859.0  -143.3    31.7    62.0    43.7   178.0    49.2 [5078]\n\nRow and column labels: TRAT\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean) \nLower triangle: Comparisons (estimate)   earlier vs. later\n```\n:::\n\n```{.r .cell-code}\ncld(medias_prod, Letters = letters)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n TRAT emmean  SE df lower.CL upper.CL .group\n 1      4219 201 21     3800     4638  a    \n 2      4935 201 21     4516     5354  ab   \n 8      5078 201 21     4659     5497  ab   \n 3      5110 201 21     4691     5529  ab   \n 5      5122 201 21     4703     5541  ab   \n 7      5128 201 21     4709     5546  ab   \n 4      5140 201 21     4721     5559  ab   \n 6      5256 201 21     4837     5675   b   \n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 8 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n:::\n:::\n\n\n### Como vizualizar?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_prod <- data.frame(medias_prod)\ndf_prod|>\n  ggplot(aes(TRAT,emmean))+\n  geom_point()+\n  ylim(2000, 6500)+\n  geom_errorbar(aes(min = lower.CL,\n                    max = upper.CL,\n                    width = 0.1))+\n  theme_few()+\n  annotate(geom = \"text\", x = 1.2, y = 4250,\n           label = \"a\")+\n    annotate(geom = \"text\", x = 2.3, y = 4900,\n           label = \"ab\")+\n    annotate(geom = \"text\", x = 3.3, y = 5150,\n           label = \"ab\")+\n  annotate(geom = \"text\", x = 4.3, y = 5155,\n           label = \"ab\")+\n    annotate(geom = \"text\", x = 5.3, y = 5200,\n           label = \"ab\")+\n    annotate(geom = \"text\", x = 6.3, y = 5275,\n           label = \"ab\")+\n    annotate(geom = \"text\", x = 7.3, y = 5150,\n           label = \"ab\")+\n    annotate(geom = \"text\", x = 8.2, y = 5140,\n           label = \"b\")\n```\n\n::: {.cell-output-display}\n![](Aula_7_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n### Criando tabela, fds\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_prod <- cld(medias_prod, Letters = LETTERS)\ndf_prod <- as.data.frame(df_prod)\n\nknitr::kable(df_prod |> dplyr::select(TRAT, emmean, .group))\n```\n\n::: {.cell-output-display}\n|   |TRAT |  emmean|.group |\n|:--|:----|-------:|:------|\n|1  |1    | 4219.25|A      |\n|2  |2    | 4935.00|AB     |\n|8  |8    | 5078.25|AB     |\n|3  |3    | 5110.00|AB     |\n|5  |5    | 5122.00|AB     |\n|7  |7    | 5127.50|AB     |\n|4  |4    | 5140.25|AB     |\n|6  |6    | 5256.25|B      |\n:::\n\n```{.r .cell-code}\nlibrary(writexl)\n\nwrite_xlsx(df_prod, \"df.xlsx\")\n```\n:::\n\n\n## Pós intervalo\n\n### Importar e vizualizar novos dados\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncurve <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1807247585\")\n\ncurve |> \n  ggplot(aes(day, severity))+\n  geom_point()+\n  facet_wrap(~Irrigation)\n```\n\n::: {.cell-output-display}\n![](Aula_7_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\ncurve |> \n  group_by(day, Irrigation) |> \n  summarise(mean_sev = mean(severity)) |>\n  ggplot(aes(day, mean_sev, color = Irrigation))+\n  geom_point( color = \"black\")+\n  geom_line()+\n  theme_few()+\n  labs(x = \"Days\", y = \"Severity (%)\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'day'. You can override using the `.groups`\nargument.\n```\n:::\n\n::: {.cell-output-display}\n![](Aula_7_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n:::\n\n\n### Área abaixo da curva de progresso da doença\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncurve2 <- curve |> \n  group_by(Irrigation, rep) |> \n  summarise(aacpd = AUDPC(day, severity))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Irrigation'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nm_curve <- lm(aacpd ~ Irrigation + factor(rep),\n              data = curve2)\n\nanova(m_curve)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: aacpd\n            Df  Sum Sq  Mean Sq F value  Pr(>F)  \nIrrigation   1 0.23602 0.236017  10.605 0.08275 .\nfactor(rep)  2 0.61291 0.306454  13.771 0.06770 .\nResiduals    2 0.04451 0.022254                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\nsummary(m_curve)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = aacpd ~ Irrigation + factor(rep), data = curve2)\n\nResiduals:\n       1        2        3        4        5        6 \n-0.09917  0.11083 -0.01167  0.09917 -0.11083  0.01167 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(>|t|)    \n(Intercept)       13.0492     0.1218 107.133 8.71e-05 ***\nIrrigationFurrow   0.3967     0.1218   3.257   0.0828 .  \nfactor(rep)2       0.7700     0.1492   5.162   0.0355 *  \nfactor(rep)3       0.2625     0.1492   1.760   0.2205    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1492 on 2 degrees of freedom\nMultiple R-squared:  0.9502,\tAdjusted R-squared:  0.8755 \nF-statistic: 12.72 on 3 and 2 DF,  p-value: 0.07379\n```\n:::\n\n```{.r .cell-code}\ncheck_normality(m_curve)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: residuals appear as normally distributed (p = 0.380).\n```\n:::\n\n```{.r .cell-code}\ncheck_heteroscedasticity(m_curve)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: Error variance appears to be homoscedastic (p = 0.704).\n```\n:::\n\n```{.r .cell-code}\n#Coenficiente de Variação\ncv.model(m_curve)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.097572\n```\n:::\n:::\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "Aula_7_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}