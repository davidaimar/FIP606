---
title: ""
format: html
---

# Projetos e Diretórios

Criar um projeto no RStudio para análise de dados oferece diversas vantagens, como melhor organização e gerenciamento de arquivos, ambiente de trabalho isolado e reprodutível, e integração com sistemas de controle de versão como Git. Facilita a colaboração e partilha de projetos, permitindo que todas as dependências e estrutura de diretórios sejam consistentes. A automatização de tarefas através de scripts, a facilidade de navegação e a manutenção de um diretório de trabalho consistente melhoram a eficiência. Além disso, as configurações específicas do projeto são salvas e podem ser facilmente restauradas, proporcionando um ambiente de análise de dados organizado e eficaz.

Para criar um projeto no RStudio, abra o programa e clique em Project: (None) no canto superior direito, selecionando `New Project...` Escolha `New Directory` para criar um projeto em um novo diretório ou `Existing Directory` para usar uma pasta existente. Para a maioria dos casos, selecione New Project, insira o nome do diretório e escolha o local onde o diretório será criado. Clique em `Create Project` e o RStudio configurará e abrirá automaticamente o novo projeto, permitindo que você adicione arquivos e scripts conforme necessário para sua análise de dados.

# O que um **Quarto Document**?

Um Quarto document é um documento dinâmico criado com Quarto, uma plataforma que facilita a criação de documentos, apresentações e sites a partir de código R, Python e outras linguagens de programação. Quarto é uma evolução do RMarkdown, projetada para ser mais extensível e suportar múltiplas linguagens.

Nas análises realizadas aqui utilizaremos quarto documents. Nossos scripts terão a estensão **'qmd'**.

Para criar um novo Documento Quarto vá até o menu `File >` `New File >` `Quarto Document....`, selecione o tipo de documento que deseja criar (por exemplo, HTML, PDF, Word) e clique em OK.

# Mais uma ferramenta importante, o Chunk!

Um chunk (ou "bloco de código") é uma seção de um documento Quarto que contém código a ser executado. Chunks são delimitados por marcadores especiais que indicam onde o código começa e termina. Eles são usados para inserir e executar código dentro de documentos dinâmicos, permitindo a integração de análise de dados e texto explicativo em um único documento.

## Estrutura de um Chunk

Bom, para resumir...

Isso: '**```{r ...}**'; inicia um chunk de código R.

E isso: '**```**'; termina o chunk.

Você pode criar um chunk utilizando o atalho de teclado `Ctrl + Alt + I` (Windows/Linux) ou `Cmd + Option + I` (Mac) para inserir um chunk de código. Para executar o código dentro desse chunk, com o mesmo selecionado, pressione `Ctrl + Enter`. Para deixar comentários dentro do chunk adicone **#** antes da frase.

```{r}
# Este é um exemplo de chunk

# Você pode executar diversos códigos e obter respostas:
1 + 1

```

# Operações Básicas

Agora que você já conhece os arquivos Quarto Document, vamos iniciar com operações básicas. Vale lembrar que os comandos devem ser executados dentro dos chunks.

## Aprendendo a atribuir valores

Você pode criar objetos atribuindo valores à eles. Os valores adiconados irão aparecer na aba `Enviroment`.

```{r}
A <- 1
B <- 2
C <- 3

# Para vizualizar o valor do objeto selecione-o e execute o código.

C

```

Você pode ir além seguindo os próximos chunks:

```{r}
# Criando objetos com mais de um valor; utilizando 'c' para combinação.

D <- c(2, 4, 6, 8, 10)

# Criando objetos com um outro tipo de dado.

S <- c("une", "dune", "tê", "salamê", "minguê")

# Agora, é só vizualizar:

D

```

## Fazendo operações

Você pode fazer operações com números e também com os objetos criados que assumem os valores atribuidos 

```{r}
A + 2

```

## Criando um dataframe

Um dataframe é uma estrutura de dados bidimensional, semelhante a uma tabela, amplamente utilizada na linguagem R. Ele  permite armazenar e manipular diferentes tipos de dados tabulares de forma eficiente.

```{r}
df <- data.frame(A, B) # Exemplo de dataframe simples

```

```{r}
# Exemplo de dataframe mais complexo

dataf <- data.frame(palavras = S, números = D)


dataf

```

## Como pedir ajuda

Você percebeu que utilizou um comando chamado `data.frame` para criar o seu dataframe, certo? Pois bem, este comando é uma função base do software R. Ao longo das nossas aulas vamos nos deparar com diversas funções diferentes.

Ficou com dúvida sobre o uso de alguma função? Tem uma função que pode te ajudar! Basta digitar `help()`, entre parênteses você digita o nome da função sobre a qual você tem duvida. Veja o exemplo:

```{r}

help(data.frame)

# Isso faz com que apareça informações sobre a função na aba de ajuda "help".

```

