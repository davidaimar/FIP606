---
title: "aula10"
format: html
editor: visual
---

# 19/06/24

# Criação de Mapas

Pacotes carregados:
```{r warning=FALSE, message=FALSE}
library(tidyverse)
library(gsheet)
library(rnaturalearth)
library(rnaturalearthhires)
library(ggspatial)
library(plotly)
library(leaflet)
library(r4pde)
library(ggthemes)

```
## Mapa de Países

Para plotar o mapa do pais, usa-se a função `ne_countries()`:
```{r}
BRA <- ne_states (country = "Brazil",
                  returnclass = "sf")

world <- ne_countries()

ggplot(BRA) + geom_sf(fill = "white")

```

## Filtrando Mapas por Unidades Federativas

Basta apenas fazer o uso da função `filter()`:
```{r}
MG <- BRA |> 
  filter(name_en == "Minas Gerais")

ggplot(MG) + geom_sf(fill = "white")

```

```{r}
TO <- BRA |> 
  filter(name_en == "Tocantins")

ggplot(TO) + geom_sf(fill = "white")

```

## Adicionando Elementos aos Mapas

Dados que contém latitude e longidtude podem ter repostas de outras variáveis adicionadas aos mapas criados no R.

Veja o exemplo para incidência de ferrugem asiática da soja:
```{r}
sbr <- RustSoybean
sbr |> 
  ggplot(aes(longitude, latitude)) +
  geom_point() +
  coord_sf()

```

```{r}
bra <- ggplot(BRA) +
  geom_sf(fill = "white",
                      color = "black",
                      linewidth = 0.5) +
  geom_point( data = sbr, aes(longitude, latitude),
              color = "red") +
  theme_map() +
  annotation_north_arrow(which_north = "grid")
bra

```

## Mapas Interativos

Através da função `ggplotly()` é possível criar mapas em quadros dinâmicos com interface que permite movimento, zoom e outras ferramentas de exploração.
```{r warning=FALSE, message=FALSE}
ggplotly(bra)

```

Configurando um mapa interativo usando o pacote **leaflet**, com base na localização especificada (longitude e latitude de Viçosa, MG, Brasil):
```{r}
Viçosa <- leaflet() |> 
  addTiles() |> 
  addProviderTiles(providers$Esri.NatGeoWorldMap) |> 
  setView(lng = -42.8825, lat = -20.7546, zoom = 5)

Viçosa

```

Adicionando os dados de incidência da ferrugem asiática da soja ao mapa interativo
```{r}
Viçosa_2 <- leaflet(sbr) |> 
  addTiles() |> 
  addCircleMarkers(radius = 2)

Viçosa_2

```

## Gráfico geoespacial com Pontos e Gráficos de Pizza

Combinando diferentes funcionalidades de visualização geoespacial e estatística podemos criar um gráfico interativo e informativo que mostra pontos geográficos e informações sobre a predominância de algumas doenças. 

```{r, warning=FALSE, message=FALSE}
library(ggrepel) # Para adicionar textos que não se sobreponham aos pontos
library(scatterpie) # # Para criar gráficos de torta dispersos

mapa <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1pAIFKsdKxk_UQQXdYwIO-O5NOkYNhpclImJcLziYnk4/edit?usp=sharing")

Bra_2 <- ggplot(BRA) +
  geom_sf(fill = "white", color = "black", linewidth = 0.5) +
  coord_sf()+
  geom_point(data = mapa, aes(lon, lat))+ # Plota pontos geoespaciais usando coordenadas de longitude e latitude do objeto 'mapa'.
  geom_scatterpie(aes(x=lon, y=lat, r = 0.6),
                  alpha = 0.8, color = NA, data = mapa,
                  cols = c ("DFC",
                            "MA",
                            "FER",
                            "ANTR",
                            "OIDIO"))+ # Cria os gráficos de pizza
  geom_text_repel(data = mapa, aes(lon, lat, label = Local),
                  size = 2, nudge_x = 0.2, nudge_y = 0.27, color = 'gray70', family = "Arial")+ # Adiciona rótulos de texto aos pontos, usando a coluna 'Local' para etiquetar cada ponto
  scale_fill_calc()+
  theme_map()+ 
  labs(x = "Longitude", y = "Laititude", legend = "", fill = "Doença")+
  theme(legend.position = "bottom", text = element_text(family = "Arieal", size = 8))

Bra_2
  
```
