---
title: " "
format: html
---

# Regressão linear

Em experimentos onde o fator avaliado é classificado como quantitativo seu efeito deve ser estudado por meio de uma relação funcional entre o mesmo e a variável resposta. A técnica indicada neste caso é a análise de regressão.

Trabalharemos com um conjunto de dados onde o fator testado é quatitativo.

Pacotes necessários
```{r warning=FALSE, message=FALSE}
library(gsheet)
library(tidyverse)
library(ggthemes)
library(lme4)
library(r4pde)
library(broom)
library(car)
library(patchwork)

```

Importação e Vizualização Gráfica dos Dados
```{r}
estande <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=401662555")

 estande |> 
  ggplot(aes(trat, nplants))+
  geom_jitter(width = 0.1, alpha = 0.2)+
  stat_summary(fun.data = "mean_cl_boot", color = 'black', size = 0.5)+
  theme_few()+
  geom_smooth(method = "lm", se = FALSE)

```
### Modelo Linear Simples ou de Primeira Ordem

Criando um filtro para avaliar os dados correspodentes ao primeiro experimento
```{r}
exp1 = estande |> 
  filter(exp == 1)

# Vizualização gráfica:
exp1 |> 
  ggplot(aes(trat, nplants))+
  geom_point()+
  theme_few()+
  ylim(0,100)+
  geom_smooth(method = "lm", se = F)


```
Ajustando o Modelo Linear através do `lm()`:
```{r}
lm1 <- lm(nplants ~ trat,
          data = exp1)

summary(lm1)

```
Repetindo para o segundo e terceiro experimento
```{r}
exp2 = estande |> 
  filter(exp == 2)

exp2 |> 
  ggplot(aes(trat, nplants))+
  geom_point()+
  theme_few()+
  ylim(0,100)+
  geom_smooth(method = "lm", se = F)

```

```{r}
lm2 <- lm(nplants ~ trat,
          data = exp2)

summary(lm2)

```

```{r}
exp3 = estande |> 
  filter(exp == 3)

exp3 |> 
  ggplot(aes(trat, nplants))+
  geom_point()+
  theme_few()+
  ylim(0,100)+
  geom_smooth(method = "lm", se = F)

```

```{r}
lm3 <- lm(nplants ~ trat, data = exp3)

summary(lm3)

```

Vale lembrar que para ajustar modelos lineares simples os dados devem atender as pressuposições da ANOVA já ensinadas

## Modelo Linear Generalizado (GLM)

Utilizaremos o Critério de Informação de Akaike (AIC) para verificar a qualidade dos modelos testados

Fazendo para os dados do terceito experimento e assumindo uma distribuição gaussiana, temos:
```{r}
glm3 <- glm(nplants ~ trat,
            data = exp3)

summary(glm3)

```

```{r}
AIC(glm3)

```

Assumindo uma distribuição de poisson, temos:
```{r}
glm3b <- glm(nplants ~ trat,
             family = "poisson" (link = "log"),
             data = exp3)

summary(glm3b)

```

```{r}
AIC(glm3b) 

```

Quanto menor o valor de AIC, melhor é o modelo

## Modelos Lineares Generalizados de Efeitos Mistos (GLMMs)

GLMMs são uma extensão dos GLMs que incorporam efeitos mistos, combinando efeitos fixos e aleatórios. Eles são especialmente úteis em situações onde há correlação ou variabilidade nos dados que podem ser atribuídas a diferentes níveis hierárquicos ou grupos.

Você pode utilizar os GLMMs através da função `glmer`.


```{r}
glmer3 <- glmer(nplants ~ trat + (trat | exp), data = estande)

summary(glmer3)

```

```{r}
AIC(glmer3)

```

GLMMs assumindo uma distribuição de poisson
```{r}

glmer3b <- glmer(nplants ~ trat + (trat|exp), family = poisson(link = "log"),
                                                              data = estande) 
summary(glmer3b)

```

```{r}
AIC(glmer3b)

```


```{r}

wm <- WhiteMoldSoybean

wm |> 
  ggplot(aes(inc, yld, group = factor(study)))+
  geom_point()+
  #facet_wrap(~ study)+
  geom_smooth(method = "lm", se= F)
  theme_minimal()

```

```{r}

mofo1 <- lm(yld ~ inc,
            data = wm)

summary(mofo1)

```

```{r}
fit_all <- wm |> 
  group_by(study) |> 
  do(tidy(lm(.$yld ~ .$inc), conf.int = TRUE))

fit_all

g_inter <- fit_all |> 
  filter(term == "(Intercept)") |> 
  ggplot(aes(x = estimate))+
  theme_r4pde()+
  geom_histogram(bins = 8, color = "white", fill = "gray50")+
  labs(x = "Intercept", y = "frequency")

g_slop <- fit_all |> 
  filter(term == ".$inc") |> 
  ggplot(aes(x = estimate))+
  theme_r4pde()+
  geom_histogram(bins = 8, color = "white", fill = "gray50")+
  labs(x = "Slopes", y = "Frequency")


g_inter + g_slop

df <- fit_all |>
  filter(term == ".$inc")

mean(df$estimate)


```

```{r}
mofo2 <- lmer(yld ~ inc + (inc | study), data = wm,
              REML = F)

summary(mofo2)
Anova(mofo2)
confint(mofo2, method = "Wald")

```

## Modelo Linear Quadrático ou de Segunda Ordem

Um Modelo Linear de Segunda Ordem (também conhecido como modelo quadrático) é uma extensão do modelo linear de primeira ordem que inclui termos quadráticos para capturar relações curvilíneas entre a variável dependente e as variáveis independentes.

Esse tipo de modelo é útil quando a relação entre as variáveis não é bem representada por uma linha reta, mas sim por uma curva parabólica.

A seguir faremos um comparação da utilização um modelo linear de primeira e segunda ordem para o próximo conjunto de dados

Importação e Vizualização dos Dados
```{r}
estande <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=401662555")

exp2 <- estande |> filter(exp == 2)

exp2 |> 
  ggplot(aes(trat, nplants))+
  geom_point()+
  theme_few()+
  ylim(0, 100)+
  geom_smooth(method = "lm",
              se = F,
              formula = y~poly(x,2),
              color = "red")+
  geom_smooth(method = "lm", se = FALSE)

```
O gráfico acima contém uma comparação (modelo simples em azul e o modelo quadrático em vermelho) entre ambos os modelos. Concluiremos com base nas análises estatístics à seguir.

### Modelo de primeira ordem
```{r}
lm2 <- lm(nplants~trat,
          data = exp2)

summary(lm2)

```

```{r}
hist(residuals(lm2))

```

### Modelo de segunda ordem
```{r}
exp2$trat2 <- exp2$trat^2

lm3 <-lm(nplants ~trat + trat2,
         data = exp2)

summary(lm3)
```

```{r}
hist(residuals(lm3))

```

### Comparando os modelos

Realizando a comparação pelo AIC, temos
```{r}
AIC(lm2)

```

```{r}
AIC(lm3)

```

Com isso, observamos que o modelo linear se segunda ordem foi o melhor.

### Outro Método de Comparação de Modelos Lineares

O pacote **AgroR** tem funções que nos permitem comparar diferentes modelos. A conclusão é baseada no valor de R², que, quanto maior, mais preciso é o modelo (diferente do AIC).

Veja como usá-lo para o mesmo conjunto de dados:
```{r warning=FALSE, message=FALSE}
library(AgroR)
with(exp2, polynomial(trat, nplants, grau = 1))

```

```{r}
with(exp2, polynomial(trat, nplants, grau = 2))

```

```{r}
with(exp2, polynomial(trat, nplants, grau = 3))

```

Observa-se que o R² melhora conforme o aumento do grau. No entanto, não podemos aceitar o grau 3, pois o estande não aumenta a concentração de inóculo. O grau 2 é o mais adequado neste caso.

## Modelo não linear

Modelos não lineares são utilizados quando a relação entre a variável dependente e as variáveis independentes não pode ser adequadamente descrita por uma função linear.

Podemos utilizar modelos não lineares na análise estatística dos dados provenientes de um experimento que avaliou seis doses de um fungicida na inibição da germinação de conídios de vinte diferentes isolados. 

Importando, modificando e vizualizando os dados
```{r}
sensi <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=465348652")

sensi2 <- sensi|> 
  group_by(code, dose) |> 
  summarise(mean_germination = mean(germination))
            
sensi2 |>  
  ggplot(aes(dose, mean_germination))+
  geom_point()+
  facet_wrap(~code)+
  geom_smooth(method = "lm",
              se = FALSE,
              formula = y ~poly(x,2),
              color = "blue")

```

Filtrando um isolado para ajustar um modelo não linear através do pacote **drc**.
```{r warning=FALSE, message=FALSE}
isolado152 <- sensi2 |> 
  filter(code == "152")

library(drc)

drc1 <-  drm(mean_germination ~ dose, data = isolado152, 
             fct = LL.3())

AIC(drc1)

```

```{r}
plot(drc1)

```

Sumarizando o resultado
```{r}
summary(drc1)

```

Para demonstrar qual dose inibe 50% da germinação de conídios do isolado que estamos avaliando separadamente, usamos:
```{r}
ED(drc1, 50, interval = "delta")

```

Em experimentos semelhantes o pacote **ec50estimator** consegue realizar os ajuste dos modelos para todos os isolados de maneira mais simples. Observe:
```{r warning=FALSE, message=FALSE}

library(ec50estimator)
df_ec50 <- estimate_EC50(mean_germination ~ dose,
                         data = sensi2,
                         isolate_col = "code",
                         interval = "delta",
                         fct = drc :: LL.3())
df_ec50

```

Montando um gráfico com as doses estimadas
```{r}
df_ec50 |> 
  ggplot(aes(reorder(ID, Estimate), Estimate))+
  geom_point()+
  geom_errorbar(aes(ymin = Lower, ymax = Upper))+
  coord_flip()+
  theme_few()

```

Assim fica mais fácil concluir sobre qual isolado é sensivel e qual é mais resistente!
