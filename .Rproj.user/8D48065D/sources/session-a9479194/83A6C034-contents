---
title: "Aula 6"
format: html
editor_options: 
  chunk_output_type: console
---

# Aula 6

## Importar planilha de dados diversos

```{r}
library(gsheet)
mg <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137")

```

## Vizualizar

```{r}
library(tidyverse)
library(ggthemes)

mg |> 
  ggplot(aes(trat, comp))+
  geom_boxplot(fill = "gray")+
  theme_few()

```

## Teste t para dois grupos de médias independentes

```{r}
#Passar os dados para o formato largo
mg2 <- mg |> 
  pivot_wider(names_from = trat, values_from = comp)
 
mg2

#Presupposes: normality and homogeneity of variance

shapiro.test(mg2$control) #No teste de shapiro a H0 é de que a distribuição é normal
hist(mg2$control)

shapiro.test(mg2$Mg2)
hist(mg2$Mg2)

var.test(mg2$control, mg2$Mg2)

qqnorm(mg2$control)
qqline(mg2$control)

#T test
teste1 <- t.test(mg2$control, mg2$Mg2) #Pode usar 'var.equal = FALSE' quando a variância for heterogênea

```

## Reportar o resultado

```{r}
install.packages("report")
library(report)
report(teste1)

```

## Teste t para dois grupos de médias dependentes

```{r}
escala <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1aID5Dh6PlBVCKzU1j7k-WA6zuWQWE2NhtWEgdJtt5iA/edit#gid=1139290215")

#Vizualizar
escala |> 
  ggplot(aes(assessment, acuracia))+
  geom_boxplot(fill = "gray")+
  theme_few()

#Passar os dados para o formato largo
escala2 <- escala |> 
  select(assessment, rater, acuracia) |> 
  pivot_wider(names_from = assessment, values_from = acuracia)


selectescala2


#Presupposes: normality and homogeneity of variance

shapiro.test(escala2$Unaided) #No teste de shapiro a H0 é de que a distribuição é normal
hist(escala2$Unaided)

qqnorm(escala2$Unaided)
qqline(escala2$Unaided)

shapiro.test(escala2$Aided1)
hist(escala2$Aided1)

qqnorm(escala2$Aided1)
qqline(escala2$Aided1)

#Homogeneidade de variância
var.test(escala2$Unaided, escala2$Aided1) #Ho é que a variância é homogênea


#T test
teste2 <- t.test(escala2$Unaided, escala2$Aided1,
                 paired = TRUE,
                 var.equal = FALSE) #Usar 'paired = TRUE' quando o teste t for pareado (média dependentes) e 'var.equal = FALSE' quando a variância for heterogêneanea

teste2

report(teste2)

```

## Teste T não paramétrico

```{r}
escala_np <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1729131173")

#Vizualizar
escala_np |> 
  ggplot(aes(assessment, acuracia))+
  geom_boxplot(fill = "gray")+
  theme_few()

#Passar os dados para o formato largo
escala_np2 <- escala_np |> 
  select (assessment, rater, acuracia) |> 
  pivot_wider(names_from = assessment, values_from = acuracia)
 
escala_np2

#Presupposes: normality and homogeneity of variance

shapiro.test(escala_np2$Unaided) #No teste de shapiro a H0 é de que a distribuição é normal
hist(escala_np2$Unaided)

qqnorm(escala_np2$Unaided)
qqline(escala_np2$Unaided)

shapiro.test(escala_np2$Aided1)
hist(escala_np2$Aided1)

qqnorm(escala_np2$Aided1)
qqline(escala_np2$Aided1)

#Equivalente ao teste t não paramétrico = teste wilcox
teste3 <- wilcox.test(escala_np2$Unaided, escala_np2$Aided1, paired = TRUE)

teste3


```

```{r}
micelial <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=959387827")

#Vizualizar
micelial |> 
  ggplot(aes(especie, tcm))+
  geom_boxplot(fill = "gray")+
  geom_jitter(width = 0.1, size = 2)+
  theme_few()

anova_micelial <- aov(tcm ~ especie, data = micelial)
 
anova_micelial

summary(anova_micelial)
anova(anova_micelial)

anova_micelial2 <- lm(tcm ~ especie, data = micelial)

anova_micelial2
summary(anova_micelial2)
anova(anova_micelial2)


```

## Modificando os dados p termos variância significativa

```{r}
micelial2 <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=959387827")

#Vizualizar
micelial2 |> 
  ggplot(aes(especie, tcm))+
  #geom_boxplot()+
  geom_jitter(widh = 0.05, size = 2)

aov_micelial2 <- aov(tcm ~ especie, data = micelial2)
 
aov_micelial2

summary(aov_micelial2)
anova(aov_micelial2)

lm_micelial2 <- lm(tcm ~ especie, data = micelial2)

lm_micelial2

summary(lm_micelial2)
anova(lm_micelial2)

```

## Testes de comparações

```{r}
#Demonstrando os agrupamentos de médias
install.packages("emmeans")
install.packages("multcomp")
install.packages("multicompView")

library(emmeans)
library(multcomp)
library(multcompView)


medias_lm <- emmeans(lm_micelial2, ~ especie)

medias_lm

cld(medias_lm)

#Pressuposições para o novo conjunto de dados

hist(lm_micelial2$residuals)

shapiro.test(lm_micelial2$residuals)
bartlett.test(tcm ~ especie, data = micelial2) # H0 é que a variâncias são homogêneas


#Usando o pacote 'DHARMa'
install.packages("DHARMA")
library(DHARMa)

presupposes <- plot(simulateResiduals(lm_micelial2))

```

## O pacote 'performance' também roda as presuposições

```{r}
install.packages("performance")
library(performance)

check_normality(lm_micelial2)
check_heteroscedasticity(lm_micelial2)

plot_presup <- check_model(lm_micelial2)

plot_presup

```

# Aula 6.1

```{r}
Inseticida <- InsectSprays

Inseticida |>
  count(spray)

Inseticida |> 
  ggplot(aes(spray, count))+
  geom_boxplot(fill = "gray")+
  geom_jitter(width = 0.1, size = 2)+
  theme_classic()+
  scale_fill_colorblind()

```

```{r}
m1 <- lm (count ~ spray, data = Inseticida)

anova(m1)
summary(m1)

hist(m1$residuals)
shapiro.test(m1$residuals)

qqnorm(m1$residuals)
qqline(m1$residuals)

bartlett.test(count ~ spray,
              data = Inseticida)

library(performance)
check_normality(m1)
check_heteroscedasticity(m1)

```

## Tranformando os dados

```{r}
Inseticida <- Inseticida |> 
  mutate(count2 = sqrt(count))

Inseticida |> 
  ggplot(aes(spray, count2, fill= spray))+
  geom_boxplot()+
  geom_jitter(width = 0.05, size = 2)+
  theme_few()+
  scale_fill_few()+
  theme(legend.title = element_blank(), legend.position = "none")

m2 <- lm (count2 ~ spray, data = Inseticida)

anova(m2)
summary(m2)

hist(m2$residuals)
shapiro.test(m2$residuals)

qqnorm(m2$residuals)
qqline(m2$residuals)

bartlett.test(count2 ~ spray,
              data = Inseticida)

library(performance)
check_normality(m2)
check_heteroscedasticity(m2)


plot(simulateResiduals(m2))


```

## Agrupamento

```{r}
medias1 <- emmeans(m1, ~ spray)
cld(medias1)

cld1 <- cld(emmeans(m1, ~ spray),alpha = 0.01, letters = LETTERS)

cld1

medias2 <- emmeans(m2, ~ spray)
cld(medias2, Letters = letters)

```

## Alternativa 2 - não paramétrico

```{r}
library(agricolae)
kruskal.test(count ~ spray, data = Inseticida)

m3 <- kruskal(Inseticida$count,
        Inseticida$spray,
        group = TRUE)
m3

```

## Alternativa 3 - GLMs

```{r}
m4 <- glm(count ~ spray,
          family = poisson,
          data = Inseticida)

?glm

m4
summary(m4)
anova(m4)

plot(simulateResiduals(m4))

medias4 <- emmeans(m4, ~ spray, type = "response")

medias4

cld(medias4)

```

## Transformação BoxCox

```{r}
install.packages("mass")
library(MASS)

b <- boxcox(lm(Inseticida$count+0.1 ~ 1))
lambda <- b$x[which.max(b$y)]
lambda = 0.5

Inseticida$count3 <-(Inseticida$count ^ lambda - 1) / lambda

hist(Inseticida$count3)

Inseticida$count3

```

## Anova fatorial

```{r}
library(gsheet)
fungicida <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=2023059672")


fungicida$dose <- as.factor(fungicida$dose)

fungicida |> 
  ggplot(aes(treat,severity, color = dose))+
  #geom_boxplot()+
  geom_jitter(width = 0.2, size = 2.5)+
  #facet_wrap(~dose)+
  theme_few()+
  scale_fill_few()+
  theme(legend.title = element_blank(), legend.position = "none")
  
mf <- lm(severity ~ treat*dose, data = fungicida)

mf
anova(mf)

plot(simulateResiduals(mf))

mf_medias <- emmeans(mf, ~ treat | dose)
mf_medias
cld(mf_medias)

mf_medias_linha <- emmeans(mf, ~ dose | treat)
mf_medias_linha
cld(mf_medias_linha,Letters = letters)

```
