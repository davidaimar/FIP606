---
title: " "
format: html
---

# Obtendo dados através do copiar e colar

Para obter dados diretamente de tabelas em sites ou qualquer outro documento digital e criar data.frames no R você pode utilizar dois pacotes, o **tibble** e o **datapasta**. Ambos compilam os dados copiados e organizam mantendo o formato original dentro do chunk, uma maneira simples que otimiza o seu `Ctrl + C` & `Ctrl + V`.

Usando o **datapasta**, após copiar três colunas de dados de uma planilha, basta clicar em `Addins...` e `Past as data.frame`.
```{r}
library(datapasta)

dat <- data.frame(
  stringsAsFactors = FALSE, # 'stringsAsFactors' converte variáveis em um data frame para fatores
              trat = c("Mg2","Mg2","Mg2","Mg2",
                       "Mg2","Mg2","Mg2","Mg2","Mg2","Mg2","control",
                       "control","control","control","control","control","control",
                       "control","control","control"),
               rep = c(1L,2L,3L,4L,5L,6L,7L,8L,
                       9L,10L,1L,2L,3L,4L,5L,6L,7L,8L,9L,10L),
              comp = c(9,12.5,10,8,13.2,11,10.8,
                       9.5,10.8,10.4,13.72,15.91,15.7,14.2,15.9,16.54,
                       18,14.4,16.41,16)
)
dat

```

Agora, com o pacote **tibble**, basta clicar em `Addins...` e `Past as tribble`. 
```{r}
library(tibble)

dat2 <- tribble(
      ~trat, ~rep, ~comp,
      "Mg2",   1L,     9,
      "Mg2",   2L,  12.5,
      "Mg2",   3L,    10,
      "Mg2",   4L,     8,
      "Mg2",   5L,  13.2,
      "Mg2",   6L,    11,
      "Mg2",   7L,  10.8,
      "Mg2",   8L,   9.5,
      "Mg2",   9L,  10.8,
      "Mg2",  10L,  10.4,
  "control",   1L, 13.72,
  "control",   2L, 15.91,
  "control",   3L,  15.7,
  "control",   4L,  14.2,
  "control",   5L,  15.9,
  "control",   6L, 16.54,
  "control",   7L,    18,
  "control",   8L,  14.4,
  "control",   9L, 16.41,
  "control",  10L,    16
  )
dat2

# 'dat' e 'dat2' são iguais, o que muda é a forma de vizualização dos dados no chunk.

```

Veja mais esse exemplo, com o **tribble**, de um conjunto de dados disponível [aqui](https://escritacientifica.sc.usp.br/estatisticas/estatisticas-por-paises/):
```{r}
visitas <- tribble(
        ~`codigo`,            ~país,    ~`n2`,
               1L,         "Brazil",    4303L,
               2L,     "Mozambique",      43L,
               3L,       "Portugal",      33L,
               4L,  "United States",      23L,
               5L,         "Angola",      19L,
               6L,          "Spain",      16L,
               7L,      "(not set)",      12L,
               8L,       "Colombia",       8L,
               9L,        "Germany",       5L,
              10L,        "Hungary",       5L,
              11L, "United Kingdom",       5L,
              12L,    "Netherlands",       4L,
              13L,        "Ecuador",       3L,
              14L,         "France",       3L,
              15L,          "Chile",       2L,
              16L,       "Paraguay",       2L,
              17L,           "Peru",       2L,
              18L,      "Argentina",       1L,
              19L,        "Austria",       1L,
              20L,        "Bolivia",       1L,
              21L,     "Cape Verde",       1L,
              22L,          "China",       1L,
              23L,          "Egypt",       1L,
              24L,        "Finland",       1L,
              25L,          "India",       1L,
              26L,          "Italy",       1L,
              27L,       "Malaysia",       1L,
              28L,       "Pakistan",       1L,
              29L,         "Poland",       1L,
              30L,      "Singapore",       1L,
              31L,    "Timor-Leste",       1L,
              32L,        "Uruguay",       1L
             )
visitas

```

# Outros tipos de gráficos 

## Montando gráfico à partir de um data frame criado

```{r warning=FALSE, message=FALSE}
library(tidyverse)

pepper <- 
  tribble(
   ~t,  ~`1`,  ~`2`,  ~`3`,
   0,  0.08, 0.001, 0.001,
   7,  0.13,  0.01, 0.001,
  14,  0.78,  0.09,  0.01,
  21,  0.92,  0.25,  0.05,
  28,  0.99,   0.8,  0.18,
  35, 0.995,  0.98,  0.34,
  42, 0.999,  0.99,  0.48,
  49, 0.999, 0.999,  0.74
  ) 

```

Fazendo o uso da função `pivot_longer()` para modificar a aquitetura dos dados de uma maneira em  que cada observação ocupa uma linha separada em uma tabela, e diferentes medidas ou variáveis sejam armazenadas em colunas diferentes, o "formato longo", e criando um gráfico de linhas e pontos. 
```{r}
pepper |>
  pivot_longer(2:4,
               names_to = "epidemic",
               values_to = "inc") |> 
  ggplot(aes(t, inc, color = epidemic))+
  geom_point()+
  geom_line()+
  annotate(geom = "text",
           x = 12,
           y = 0.79,
           label = "1")+
annotate(geom = "text",
           x = 26,
           y = 0.80,
           label = "2")+
  annotate(geom = "text",
           x = 47,
           y = 0.76,
           label = "3")+
  theme(legend.position = "none")

```

## Tabela de Contigência

Veja como criar uma tabela de contigência à partir de dados disponíveis em um documento online no formato CSV.

O pacote **janitor** será usado para limpeza e organização de dados. A função `tabyl()` cria tabelas de frequência cruzada. Aqui, iremos criar uma tabela de contagem de combinações únicas das variáveis "cultivar" e "farm_management".

```{r warning=FALSE, message=FALSE}
library(ggthemes)

cr <- read_csv("https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv")


library(janitor)
cr |> 
  tabyl(cultivar, farm_management)


cr |> 
  count(farm_management, cultivar) |> 
  ggplot(aes(cultivar, n, fill = farm_management,
             label = n))+
  geom_col(position = "dodge2")+
  scale_fill_canva()+
  theme_bw()+
  theme(strip.text.x = element_blank(),
        legend.position = "top")+
  geom_text(position = position_dodge(width = 0.9))+
  facet_wrap(~cultivar, scales = "free_x")

```

Os dados são de uma pesquisa sobre ferrugem do café na Etiópia e contam as ocorrências de diferentes combinações de métodos de gestão agrícola (`farm_management`) e cultivares (`cultivar`), e visualiza essas contagens em um gráfico de barras facetado por cultivar, com barras coloridas por método de gestão agrícola.

## Medidas de tendência central em gráficos

Aqui veremos uma maneira de, à partir de dados importados, ralizar cálculos estatísticos (média e desvio padrão) agrupados por uma variável, e então visualiza os resultados em um gráfico.

Vamos usar o `geom_errorbar()` para adicionar barras de erro ao gráfico, representando a variação de um desvio padrão acima e abaixo da média, com largura das barras definida como 0.1.

```{r}
library(gsheet)
mg <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137")

mg |> 
  group_by(trat) |> 
  summarise(mean_comp = mean(comp), sd_comp = sd(comp))|> 
  ggplot(aes(trat, mean_comp))+
  geom_point(size = 3)+
  ylim(5,20)+ # Define os limites do eixo y de 5 a 20
  geom_errorbar(aes(ymin = mean_comp - sd_comp,
                    ymax = mean_comp + sd_comp), width = 0.1)+
  annotate (geom = "text",
           x = 1, y = 17.5,
           label = '*')

# 'group_by(trat)': Agrupa os dados pela coluna trat (tratamento).
# 'summarise(mean_comp = mean(comp), sd_comp = sd(comp))': Calcula a média (mean()) e o desvio padrão (sd()) da coluna comp para cada grupo de trat.

```
 
 Com os mesmos dados, podemos ainda, criae um gráfico de dispersão (`jitter plot`), que mostra a distribuição dos valores de comp para diferentes níveis de tratatamento.
```{r}
mg |> 
  ggplot(aes(trat, comp))+
  geom_jitter(width = 0.1)

```
 