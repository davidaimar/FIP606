---
title: " "
format: html
---

# Análise de Variância (ANOVA)

# ANOVA (DIC)
```{r}
library(gsheet)
library(tidyverse)
library(ggthemes)
micelial <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=959387827")

#Vizualizar
micelial |> 
  ggplot(aes(especie, tcm))+
  geom_boxplot(fill = "gray")+
  geom_jitter(width = 0.1, size = 2)+
  theme_few()

anova_micelial <- aov(tcm ~ especie, data = micelial)
 
anova_micelial

summary(anova_micelial)
anova(anova_micelial)

anova_micelial2 <- lm(tcm ~ especie, data = micelial)

anova_micelial2
summary(anova_micelial2)
anova(anova_micelial2)


```

## ANOVA (DIC) Variância significativa

```{r}
micelial2 <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=959387827")

#Vizualizar
micelial2 |> 
  ggplot(aes(especie, tcm))+
  #geom_boxplot()+
  geom_jitter(widh = 0.05, size = 2)

aov_micelial2 <- aov(tcm ~ especie, data = micelial2)
 
aov_micelial2

summary(aov_micelial2)
anova(aov_micelial2)

lm_micelial2 <- lm(tcm ~ especie, data = micelial2)

lm_micelial2

summary(lm_micelial2)
anova(lm_micelial2)

```

## Testes de comparações múltiplas

```{r}
#Demonstrando os agrupamentos de médias
install.packages("emmeans", repos = "https://cran.r-project.org")
install.packages("multcomp", repos = "https://cran.r-project.org")
install.packages("multicompView", repos = "https://cran.r-project.org")

library(emmeans)
library(multcomp)
library(multcompView)


medias_lm <- emmeans(lm_micelial2, ~ especie)

medias_lm

cld(medias_lm)

#Pressuposições para o novo conjunto de dados

hist(lm_micelial2$residuals)

shapiro.test(lm_micelial2$residuals)
bartlett.test(tcm ~ especie, data = micelial2) # H0 é que a variâncias são homogêneas


#Usando o pacote 'DHARMa'
install.packages("DHARMA", repos = "https://cran.r-project.org")
library(DHARMa)

presupposes <- plot(simulateResiduals(lm_micelial2))

```

## O pacote 'performance' também roda as presuposições

```{r}
library(performance)

check_normality(lm_micelial2)
check_heteroscedasticity(lm_micelial2)

plot_presup <- check_model(lm_micelial2)

plot_presup

```

##  Tranformação de dados e alternativas não-paramétricas da ANOVA 

E se as premissas não forem atendidas?

```{r}
Inseticida <- InsectSprays

Inseticida |>
  count(spray)

Inseticida |> 
  ggplot(aes(spray, count))+
  geom_boxplot(fill = "gray")+
  geom_jitter(width = 0.1, size = 2)+
  theme_classic()+
  scale_fill_colorblind()

```

```{r}
m1 <- lm (count ~ spray, data = Inseticida)

anova(m1)
summary(m1)

hist(m1$residuals)
shapiro.test(m1$residuals)

qqnorm(m1$residuals)
qqline(m1$residuals)

bartlett.test(count ~ spray,
              data = Inseticida)

library(performance)
check_normality(m1)
check_heteroscedasticity(m1)

```

## Tranformando os dados

```{r}
Inseticida <- Inseticida |> 
  mutate(count2 = sqrt(count))

Inseticida |> 
  ggplot(aes(spray, count2, fill= spray))+
  geom_boxplot()+
  geom_jitter(width = 0.05, size = 2)+
  theme_few()+
  scale_fill_few()+
  theme(legend.title = element_blank(), legend.position = "none")

m2 <- lm (count2 ~ spray, data = Inseticida)

anova(m2)
summary(m2)

hist(m2$residuals)
shapiro.test(m2$residuals)

qqnorm(m2$residuals)
qqline(m2$residuals)

bartlett.test(count2 ~ spray,
              data = Inseticida)

library(performance)
check_normality(m2)
check_heteroscedasticity(m2)


plot(simulateResiduals(m2))


```

## Agrupamento

```{r}
medias1 <- emmeans(m1, ~ spray)
cld(medias1)

cld1 <- cld(emmeans(m1, ~ spray),alpha = 0.01, letters = LETTERS)

cld1

medias2 <- emmeans(m2, ~ spray)
cld(medias2, Letters = letters)

```

## Alternativa 2 - não paramétrico

```{r}
library(agricolae)
kruskal.test(count ~ spray, data = Inseticida)

m3 <- kruskal(Inseticida$count,
        Inseticida$spray,
        group = TRUE)
m3

```

## Alternativa 3 - GLMs

```{r}
m4 <- glm(count ~ spray,
          family = poisson,
          data = Inseticida)

?glm

m4
summary(m4)
anova(m4)

plot(simulateResiduals(m4))

medias4 <- emmeans(m4, ~ spray, type = "response")

medias4

cld(medias4)

```

## Transformação BoxCox

```{r}
library(MASS)

b <- boxcox(lm(Inseticida$count+0.1 ~ 1))
lambda <- b$x[which.max(b$y)]
lambda = 0.5

Inseticida$count3 <-(Inseticida$count ^ lambda - 1) / lambda

hist(Inseticida$count3)

Inseticida$count3

```



