{
  "hash": "3968ac448716e6193b3b5e13c56a1c4a",
  "result": {
    "markdown": "---\ntitle: \" \"\nformat: html\n---\n\n\n# Análise de Variância (ANOVA)\n\n## ANOVA em DIC\n\nA ANOVA é uma técnica estatística normalmente utilizada para comparar as médias de três ou mais grupos distintos e determinar se existem diferenças estatisticamente significativas entre essas médias. A ANOVA é particularmente útil quando se deseja testar a hipótese de que várias populações têm a mesma média.\n\nAqui veremos como realizar a ANOVA para dados provenientes de experimentos conduzidos em DIC (Delineamento Inteiramente Casualizado) que é uma técnica estatística frequentemente utilizada em experimentos para comparar tratamentos onde a distribuição dos tratamentos às unidades experimentais é feita inteiramente ao acaso. Como não faz restrições na casualização, o uso do DIC pressupõe que as unidades experimentais estão sob condições homogêneas.\n\nPacotes utilizados:\n\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-1_858025e008a56f8d9e20a8d9ed466df2'}\n\n```{.r .cell-code}\nlibrary(gsheet)\nlibrary(tidyverse)\nlibrary(ggthemes)\n```\n:::\n\n\nImportando os dados e vizualizando\n\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-2_da03f47297a2079a519b99db669dc8c6'}\n\n```{.r .cell-code}\nmicelial <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=959387827\")\n\n#Vizualizar\nmicelial |> \n  ggplot(aes(especie, tcm))+\n  geom_boxplot(fill = \"gray\")+\n  geom_jitter(width = 0.1, size = 2)+\n  theme_few()\n```\n\n::: {.cell-output-display}\n![](Aula_6.1_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nRealizando a ANOVA\n\nA anova pode ser raalizada através da função `aov()` ou `lm()` do R básico. A função `lm()`, além de realizar\\< pode ser utilizada para ajustar modelos lineares ao conjunto de dados, portanto é mais completa que a `aov()`.\n\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-3_7ba6f807febcbd3d79aef462bb34c7e6'}\n\n```{.r .cell-code}\nanova_micelial <- aov(tcm ~ especie, data = micelial)\n \nanova_micelial\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCall:\n   aov(formula = tcm ~ especie, data = micelial)\n\nTerms:\n                  especie Residuals\nSum of Squares  1.4695800 0.4679167\nDeg. of Freedom         4        25\n\nResidual standard error: 0.1368089\nEstimated effects may be unbalanced\n```\n:::\n:::\n\n\nResumo dos resultados através da função `summary()`:\n\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-4_cb3f28dc3d104284742278bfba1fdd5c'}\n\n```{.r .cell-code}\nsummary(anova_micelial)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            Df Sum Sq Mean Sq F value   Pr(>F)    \nespecie      4 1.4696  0.3674   19.63 2.03e-07 ***\nResiduals   25 0.4679  0.0187                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\nObtendo o quadro da ANOVA com a função `anova()`:\n\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-5_b7bfd64471080a7dcac2bc6cc2e6628f'}\n\n```{.r .cell-code}\nanova(anova_micelial)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: tcm\n          Df  Sum Sq Mean Sq F value    Pr(>F)    \nespecie    4 1.46958 0.36739  19.629 2.028e-07 ***\nResiduals 25 0.46792 0.01872                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\nANOVA feita com a função `lm()`:\n\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-6_843ce5a23fce54ff9a64b9aa93e32518'}\n\n```{.r .cell-code}\nanova_micelial2 <- lm(tcm ~ especie, data = micelial)\n\nanova_micelial2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = tcm ~ especie, data = micelial)\n\nCoefficients:\n(Intercept)  especieFaus  especieFcor  especieFgra  especieFmer  \n      1.572       -0.335       -0.250       -0.660       -0.145  \n```\n:::\n:::\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-7_d92b4a41e351d4a0067b9cbe3cfa4cdd'}\n\n```{.r .cell-code}\nsummary(anova_micelial2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = tcm ~ especie, data = micelial)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.23667 -0.09667  0.01583  0.08833  0.28333 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  1.57167    0.05585  28.140  < 2e-16 ***\nespecieFaus -0.33500    0.07899  -4.241 0.000266 ***\nespecieFcor -0.25000    0.07899  -3.165 0.004047 ** \nespecieFgra -0.66000    0.07899  -8.356 1.05e-08 ***\nespecieFmer -0.14500    0.07899  -1.836 0.078317 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1368 on 25 degrees of freedom\nMultiple R-squared:  0.7585,\tAdjusted R-squared:  0.7199 \nF-statistic: 19.63 on 4 and 25 DF,  p-value: 2.028e-07\n```\n:::\n:::\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-8_6195f29792defb8019ae7ee29fa4b165'}\n\n```{.r .cell-code}\nanova(anova_micelial2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: tcm\n          Df  Sum Sq Mean Sq F value    Pr(>F)    \nespecie    4 1.46958 0.36739  19.629 2.028e-07 ***\nResiduals 25 0.46792 0.01872                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\n## Pressuposições da ANOVA e Testes de Médias\n\nA ANOVA possui várias pressuposições fundamentais que devem ser atendidas para que os resultados sejam válidos. Aqui iremos demonstrar diferentes meios de verificar estas presusuposições.\n\n### Normalidade dos Resíduos\n\nOs resíduos (diferenças entre os valores observados e as médias dos grupos) devem seguir uma distribuição normal.\n\nVeja diferentes maneiras de como testar a normalidade dos resíduos do conjunto de dados submetido a ANOVA\n\nOpção 1: Teste de Shapiro\n\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-9_5de013347d4fbd24eb39b498e5a32c81'}\n\n```{.r .cell-code}\nshapiro.test(anova_micelial2$residuals) # H0 é de que os resíduos apresentam distribuição normal\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tShapiro-Wilk normality test\n\ndata:  anova_micelial2$residuals\nW = 0.9821, p-value = 0.8782\n```\n:::\n:::\n\n\nOpção 2: Gráfico de histograma para os resíduos\n\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-10_291c6ae042dd1ea40ddace23b31d98bd'}\n\n```{.r .cell-code}\nhist(anova_micelial2$residuals)\n```\n\n::: {.cell-output-display}\n![](Aula_6.1_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nOpção 3: Utilizando o pacote **perfomance**\n\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-11_9474d3c30cb9ee760620523bf5f3bac7'}\n\n```{.r .cell-code}\nlibrary(performance)\n\ncheck_normality(anova_micelial2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: residuals appear as normally distributed (p = 0.878).\n```\n:::\n:::\n\n\n### Homogeneidade das Variâncias (Homoscedasticidade)\n\nAs variâncias dos resíduos devem ser aproximadamente iguais entre os grupos. A violação dessa pressuposição pode levar a resultados incorretos, pois a ANOVA assume que a variabilidade dentro de cada grupo é similar.\n\nVeja maneiras diferentes de verificar esta premissa\n\nOpção 1: Teste de Bartlett\n\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-12_c08ed32e629d1c32ff81d97c2511f585'}\n\n```{.r .cell-code}\nbartlett.test(tcm ~ especie, data = micelial) # H0 é que a variâncias são homogêneas\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tBartlett test of homogeneity of variances\n\ndata:  tcm by especie\nBartlett's K-squared = 4.4367, df = 4, p-value = 0.3501\n```\n:::\n:::\n\n\nOpção 2: Utilizando o pacote **perfomance**\n\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-13_4fdd0231260047a168fdf6f8c2daca09'}\n\n```{.r .cell-code}\ncheck_heteroscedasticity(anova_micelial2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: Error variance appears to be homoscedastic (p = 0.880).\n```\n:::\n:::\n\n\n### Otimizando os teste de pressuposições para ANVOA\n\nVocê pode utilizar o pacote **performance** para checar mais pressuposições com a função `check_model()`:\n\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-14_b9255ab7f9216dac0e471842f14c735b'}\n\n```{.r .cell-code}\nplot_presup <- check_model(anova_micelial2)\n\nplot_presup\n```\n\n::: {.cell-output-display}\n![](Aula_6.1_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nO pacote **DHARMA** também pode ser utilizado para checar normalidade e homoscedasticidade\n\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-15_f49395b72b57684e1cfa9bc9570b4fc0'}\n\n```{.r .cell-code}\nlibrary(DHARMa)\n\nplot(simulateResiduals(anova_micelial2))\n```\n\n::: {.cell-output-display}\n![](Aula_6.1_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n## Testes de Comparações Múltiplas\n\nQuando a ANOVA é significativa, isso indica que há pelo menos uma diferença significativa entre as médias dos grupos comparados. No entanto, a ANOVA não especifica quais grupos diferem entre si. Para identificar essas diferenças específicas, é necessário realizar testes de comparações múltiplas.\n\nUm teste amplamente utilizado é o Teste de Tukey, utilizado para comparações múltiplas entre todas as possíveis pares de médias.\n\nVeja como realizá-lo:\n\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-16_a802c38c52539a4be77c272cc17dd5fa'}\n\n```{.r .cell-code}\n#Demonstrando os agrupamentos de médias\nlibrary(emmeans)\nlibrary(multcomp)\n\nmedias_lm <- emmeans(anova_micelial2, ~ especie) # Obtendo as médias do conjunto de dados\n\nmedias_lm\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n especie emmean     SE df lower.CL upper.CL\n Fasi     1.572 0.0559 25    1.457     1.69\n Faus     1.237 0.0559 25    1.122     1.35\n Fcor     1.322 0.0559 25    1.207     1.44\n Fgra     0.912 0.0559 25    0.797     1.03\n Fmer     1.427 0.0559 25    1.312     1.54\n\nConfidence level used: 0.95 \n```\n:::\n:::\n\n\nA função `cld()` do pacote **multcomp** separa os grupos de média via Teste Tukey\n\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-17_649ccb5764890e431d14e5c64f369867'}\n\n```{.r .cell-code}\ncld(medias_lm, Letters = letters)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n especie emmean     SE df lower.CL upper.CL .group\n Fgra     0.912 0.0559 25    0.797     1.03  a    \n Faus     1.237 0.0559 25    1.122     1.35   b   \n Fcor     1.322 0.0559 25    1.207     1.44   b   \n Fmer     1.427 0.0559 25    1.312     1.54   bc  \n Fasi     1.572 0.0559 25    1.457     1.69    c  \n\nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 5 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n:::\n:::\n\n\n## Transformação de dados e alternativas não-paramétricas da ANOVA\n\nE se as pressuposições não forem atendidas?\n\nNeste caso podemos aplicar diferentes transformações nos dados (raiz quadrada, logarítmica ou boxcox), para tentar atender às premissas de normalidade e homogeneidade das variâncias.\n\nVeremos as transformações para um novo conjunto de dados onde as premissas para a ANOVA não são atendidas:\n\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-18_65712d283140cfe45dcd7e856f9e7d44'}\n\n```{.r .cell-code}\nInseticida <- InsectSprays\n```\n:::\n\n\n### Tranformação por raiz quadrada e logarítmica\n\nTransformando os dados via raiz quadrada, realizando a ANOVA e testando as pressuposições, temos os seguintes chunks:\n\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-19_a37a76d9f6a43b64aee7b45da6c8ab5f'}\n\n```{.r .cell-code}\nInseticida <- Inseticida |> \n  mutate(count2 = sqrt(count))\n\n# Vizualizando após a transformação\nInseticida |> \n  ggplot(aes(spray, count2, fill= spray))+\n  geom_boxplot()+\n  geom_jitter(width = 0.05, size = 2)+\n  theme_few()+\n  scale_fill_few()+\n  theme(legend.title = element_blank(), legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](Aula_6.1_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-20_5b441614556e7b263ed52b8e15a4a770'}\n\n```{.r .cell-code}\nm2 <- lm (count2 ~ spray, data = Inseticida)\n\nanova(m2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: count2\n          Df Sum Sq Mean Sq F value    Pr(>F)    \nspray      5 88.438 17.6876  44.799 < 2.2e-16 ***\nResiduals 66 26.058  0.3948                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-21_b19534704033b7ae260aabca7d61e814'}\n\n```{.r .cell-code}\nplot(simulateResiduals(m2))\n```\n\n::: {.cell-output-display}\n![](Aula_6.1_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\nA transformação logarítima pode ser feita substituindo a função `sqrt()` por `log()`.\n\n### Transformação BoxCox\n\nA transformação Box-Cox é definida por uma família de transformações parametrizadas por lambda (λ)\n\nProcesso de aplicação consiste em estimar lambda (λ), calculando a transformação para uma série de valores possíveis de λ (geralmente de -2 a 2, por exemplo) e escolhendo aquela que maximiza a normalidade dos dados transformados. Posteriormente, aplicar a transformação aos dados originais y\\^(λ), onde y é a variável de interesse.\n\nO pacote **MASS** possui as funções úteis para realizar essa transformação. Veja:\n\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-22_f1a28c704484fc9c20054b12dfa8eed7'}\n\n```{.r .cell-code}\nlibrary(MASS)\n\nb <- boxcox(lm(Inseticida$count+0.1 ~ 1))\n```\n\n::: {.cell-output-display}\n![](Aula_6.1_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlambda <- b$x[which.max(b$y)]\nlambda = 0.5\n\nInseticida$count3 <-(Inseticida$count ^ lambda - 1) / lambda\n```\n:::\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-23_e260c1abadf9ac664237da180e7090f3'}\n\n```{.r .cell-code}\nhist(Inseticida$count3)\n```\n\n::: {.cell-output-display}\n![](Aula_6.1_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-24_f39fdc4386bdfb2d0a6b37fb48778312'}\n\n```{.r .cell-code}\nm3 <- lm (count3 ~ spray, data = Inseticida)\n\nplot(simulateResiduals(m3))\n```\n\n::: {.cell-output-display}\n![](Aula_6.1_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n### Teste de Kruskal-Walis\n\nSe isso não for eficaz, podem ser utilizados testes não paramétricos, como o teste de Kruskal-Wallis, que não assume normalidade dos dados.\n\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-25_0dec11b95b5eaa699df5f72229e9b32e'}\n\n```{.r .cell-code}\nlibrary(agricolae)\nkruskal.test(count ~ spray, data = Inseticida)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tKruskal-Wallis rank sum test\n\ndata:  count by spray\nKruskal-Wallis chi-squared = 54.691, df = 5, p-value = 1.511e-10\n```\n:::\n\n```{.r .cell-code}\nm3 <- kruskal(Inseticida$count,\n        Inseticida$spray,\n        group = TRUE)\n\nm3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$statistics\n     Chisq Df      p.chisq  t.value      MSD\n  54.69134  5 1.510845e-10 1.996564 8.462804\n\n$parameters\n            test p.ajusted           name.t ntr alpha\n  Kruskal-Wallis      none Inseticida$spray   6  0.05\n\n$means\n  Inseticida.count     rank      std  r Min Max   Q25  Q50   Q75\nA        14.500000 52.16667 4.719399 12   7  23 11.50 14.0 17.75\nB        15.333333 54.83333 4.271115 12   7  21 12.50 16.5 17.50\nC         2.083333 11.45833 1.975225 12   0   7  1.00  1.5  3.00\nD         4.916667 25.58333 2.503028 12   2  12  3.75  5.0  5.00\nE         3.500000 19.33333 1.732051 12   1   6  2.75  3.0  5.00\nF        16.666667 55.62500 6.213378 12   9  26 12.50 15.0 22.50\n\n$comparison\nNULL\n\n$groups\n  Inseticida$count groups\nF         55.62500      a\nB         54.83333      a\nA         52.16667      a\nD         25.58333      b\nE         19.33333     bc\nC         11.45833      c\n\nattr(,\"class\")\n[1] \"group\"\n```\n:::\n:::\n\n\n### Modelos Lineares Não Generelaziados\n\nOs modelos lineares não generalizados permitem modelar relações entre variáveis dependentes e independentes, mesmo quando a distribuição dos dados não é normal ou quando a variância não é constante.\n\nVocê pode utilizar a função `glm()` do R básico, identificando a distribuição que mais adequa aos seus dados no argumento `family =`.\n\nAqui assumimos a distribuição de poisson.\n\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-26_406720494ee7823733612820ba2855b9'}\n\n```{.r .cell-code}\nm4 <- glm(count ~ spray,\n          family = poisson,\n          data = Inseticida)\n\nm4\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:  glm(formula = count ~ spray, family = poisson, data = Inseticida)\n\nCoefficients:\n(Intercept)       sprayB       sprayC       sprayD       sprayE       sprayF  \n    2.67415      0.05588     -1.94018     -1.08152     -1.42139      0.13926  \n\nDegrees of Freedom: 71 Total (i.e. Null);  66 Residual\nNull Deviance:\t    409 \nResidual Deviance: 98.33 \tAIC: 376.6\n```\n:::\n:::\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-27_b1e256766ef119891da898bae3a0edc6'}\n\n```{.r .cell-code}\nanova(m4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Deviance Table\n\nModel: poisson, link: log\n\nResponse: count\n\nTerms added sequentially (first to last)\n\n      Df Deviance Resid. Df Resid. Dev\nNULL                     71     409.04\nspray  5   310.71        66      98.33\n```\n:::\n:::\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-28_e470883e3fdfade5cb052121090cef46'}\n\n```{.r .cell-code}\nplot(simulateResiduals(m4))\n```\n\n::: {.cell-output-display}\n![](Aula_6.1_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='Aula_6.1_cache/html/unnamed-chunk-29_8ed980341b409c261973546fbc620334'}\n\n```{.r .cell-code}\nmedias4 <- emmeans(m4, ~ spray, type = \"response\")\n\ncld(medias4, Letters = letters)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n spray  rate    SE  df asymp.LCL asymp.UCL .group\n C      2.08 0.417 Inf      1.41      3.08  a    \n E      3.50 0.540 Inf      2.59      4.74  ab   \n D      4.92 0.640 Inf      3.81      6.35   b   \n A     14.50 1.099 Inf     12.50     16.82    c  \n B     15.33 1.130 Inf     13.27     17.72    c  \n F     16.67 1.179 Inf     14.51     19.14    c  \n\nConfidence level used: 0.95 \nIntervals are back-transformed from the log scale \nP value adjustment: tukey method for comparing a family of 6 estimates \nTests are performed on the log scale \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}