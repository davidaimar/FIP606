milho |>
ggplot(aes(method, index))+
geom_jitter(width = 0.01, color = "black")+
facet_wrap(~hybrid)+
stat_summary(fun.data = "mean_cl_boot", color = 'black', size = 0.5, alpha = 0.5)+
theme_few()+
labs(x = 'Method',
y = 'Index')
??Anova
library(lme4)
milho <- milho |>
mutate(block = as.factor(block))
mix2 <- lmer(sqrt(index) ~ hybrid*method + block + (1|block/hybrid), data = milho)
Anova(mix2)
??Anova
library(car)
library(lme4)
library(car)
milho <- milho |>
mutate(block = as.factor(block))
mix2 <- lmer(sqrt(index) ~ hybrid*method + block + (1|block/hybrid), data = milho) # Modelos Lineares de Efeitos Mistos
Anova(mix2)
plot(simulateResiduals(mix2))
library(lme4)
library(car)
milho <- milho |>
mutate(block = as.factor(block))
mix2 <- lmer(index ~ hybrid*method + block + (1|block/hybrid), data = milho) # Modelos Lineares de Efeitos Mistos
Anova(mix2)
plot(simulateResiduals(mix2))
library(lme4)
library(car)
milho <- milho |>
mutate(block = as.factor(block))
mix <- lmer(index ~ hybrid*method + block + (1|block/hybrid), data = milho) # Modelos Lineares de Efeitos Mistos
Anova(mix2)
plot(simulateResiduals(mix))
check_model(mix)
check_normality(mix)
check_heteroscedasticity(mix)
library(lme4)
library(car)
milho <- milho |>
mutate(block = as.factor(block))
mix <- lmer(index ~ hybrid*method + block + (1|block/hybrid), data = milho) # Modelos Lineares de Efeitos Mistos
Anova(mix)
library(performance)
check_normality(mix)
check_heteroscedasticity(mix)
mix2 <- lmer(sqrt(index) ~ hybrid*method + block + (1|block/hybrid), data = milho2)
mix2 <- lmer(sqrt(index) ~ hybrid*method + block + (1|block/hybrid), data = milho)
Anova(mix2)
check_normality(mix)
check_heteroscedasticity(mix)
check_normality(mix2)
check_heteroscedasticity(mix2)
mix3<- lmer(sqrt(yield) ~ hybrid*method + block + (1|block/hybrid), data = milho)
Anova(mix3)
check_normality(mix3)
check_heteroscedasticity(mix3)
mf_medias <- emmeans(mf, ~ treat | dose)
estande <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=401662555")
estande |>
ggplot(aes(trat, nplants))+
geom_jitter(width = 0.1, alpha = 0.2)+
#facet_wrap(~ exp)+
stat_summary(fun.data = "mean_cl_boot", color = 'black', alpha = 0.5)+
theme_few()+
geom_smooth(method = "lm", se = F)
exp1 = estande |>
filter(exp == 1)
# Vizualização gráfica:
exp1 |>
ggplot(aes(trat, nplants))+
geom_point()+
theme_few()+
ylim(0,100)+
geom_smooth(method = "lm", se = F)
lm1 <- lm(nplants ~ trat, data = exp1)
summary(lm1)
exp3 = estande |>
filter(exp == 3)
exp3 |>
ggplot(aes(trat, nplants))+
geom_point()+
theme_few()+
ylim(0,100)+
geom_smooth(method = "lm", se = F)
lm3 <- lm(nplants ~ trat, data = exp3)
summary(lm3)
residuals(lm3)
hist(residuals(lm3))
estande <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=401662555")
exp2 <- estande |> filter(exp == 2)
exp2 |>
ggplot(aes(trat, nplants))+
geom_point()+
theme_few()+
ylim(0, 100)+
geom_smooth(method = "lm",
se = F,
formula = y~poly(x,2),
color = "red")+
geom_smooth(method = "lm", se = FALSE)
lm2 <- lm(nplants~trat,
data = exp2)
summary(lm2)
hist(residuals(lm2))
hist(residuals(lm3))
AIC(lm2)
AIC(lm3)
with(exp2, polynomial(trat, nplants, grau = 2))
library(AgroR)
with(exp2, polynomial(trat, nplants, grau = 2))
library(AgroR)
with(exp2, polynomial(trat, nplants, grau = 1))
with(exp2, polynomial(trat, nplants, grau = 2))
with(exp2, polynomial(trat, nplants, grau = 3))
sensi <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=465348652")
sensi$dose <- as.factor(sensi$dose)
is.factor(sensi$dose)
sensi|>
group_by(code, dose) |>
summarise(mean_germination = mean(germination)) |>
ggplot(aes(dose, mean_germination))+
geom_point()+
facet_wrap(~code)
sensi|>
group_by(code, dose) |>
summarise(mean_germination = mean(germination)) |>
ggplot(aes(dose, mean_germination))+
geom_point()+
facet_wrap(~code)+
geom_smooth(method = "lm",
se = FALSE,
formula = y ~poly(x,2),
color = "blue")
sensi <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=465348652")
sensi$dose <- as.factor(sensi$dose)
is.factor(sensi$dose)
sensi|>
group_by(code, dose) |>
summarise(mean_germination = mean(germination)) |>
ggplot(aes(dose, mean_germination))+
geom_point()+
facet_wrap(~code)+
geom_smooth(method = "lm",
se = FALSE,
formula = y ~poly(x,2),
color = "blue")
sensi <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=465348652")
sensi|>
group_by(code, dose) |>
summarise(mean_germination = mean(germination)) |>
ggplot(aes(dose, mean_germination))+
geom_point()+
facet_wrap(~code)+
geom_smooth(method = "lm",
se = FALSE,
formula = y ~poly(x,2),
color = "blue")
sensi <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=465348652")
sensi|>
group_by(code, dose) |>
summarise(mean_germination = mean(germination)) |>
ggplot(aes(dose, mean_germination))+
geom_point()+
facet_wrap(~code)+
geom_smooth(method = "lm",
se = FALSE,
formula = y ~poly(x,2),
color = "blue")
FGT05 <- sens2 |>
filter(code == "FGT05")
FGT05 <- sensi |>
filter(code == "FGT05")
??drm
library(drc)
drc1 <-  drm(mean_germination ~ dose, data = FGT05,
fct = LL.3())
library(drc)
drc1 <-  drm(mean_germination ~ dose, data = FGT05,
fct = LL.3())
View(FGT05)
View(sensi)
sensi <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=465348652")
sensi2|>
group_by(code, dose) |>
summarise(mean_germination = mean(germination)) |>
ggplot(aes(dose, mean_germination))+
geom_point()+
facet_wrap(~code)+
geom_smooth(method = "lm",
se = FALSE,
formula = y ~poly(x,2),
color = "blue")
sensi <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=465348652")
sensi2 <- sensi|>
group_by(code, dose) |>
summarise(mean_germination = mean(germination))
View(sensi2)
sensi <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=465348652")
sensi2 <- sensi|>
group_by(code, dose) |>
summarise(mean_germination = mean(germination))
sensi2 |>
ggplot(aes(dose, mean_germination))+
geom_point()+
facet_wrap(~code)+
geom_smooth(method = "lm",
se = FALSE,
formula = y ~poly(x,2),
color = "blue")
FGT05 <- sensi2 |>
filter(code == "FGT05")
drc1 <-  drm(mean_germination ~ dose, data = FGT05,
fct = LL.3())
AIC(drc1)
plot(drc1)
isolado152 <- sensi2 |>
filter(code == "152")
library(drc)
drc1 <-  drm(mean_germination ~ dose, data = isolado152,
fct = LL.3())
AIC(drc1)
plot(drc1)
ED(drc1, 50, interval = "delta")
summary(drc1)
library(ec50estimator)
library(ec50estimator)
df_ec50 <- estimate_EC50(mean_germination ~ dose,
data = sens2,
isolate_col = "code",
interval = "delta",
fct = drc :: LL.3())
library(ec50estimator)
df_ec50 <- estimate_EC50(mean_germination ~ dose,
data = sensi2,
isolate_col = "code",
interval = "delta",
fct = drc :: LL.3())
df_ec50
```{r warning=FALSE, message=FALSE}
library(ec50estimator)
df_ec50 <- estimate_EC50(mean_germination ~ dose,
data = sensi2,
isolate_col = "code",
interval = "delta",
fct = drc :: LL.3())
df_ec50
df_ec50 |>
ggplot(aes(reorder(ID, Estimate), Estimate))+
geom_point()+
geom_errorbar(aes(ymin = Lower, ymax = Upper))+
coord_flip()
df_ec50 |>
ggplot(aes(reorder(ID, Estimate), Estimate))+
geom_point()+
geom_errorbar(aes(ymin = Lower, ymax = Upper))+
coord_flip()+
theme_few()
library(tidyverse)
library(AgroR)
library(gsheet)
library(patchwork)
library(corrplot)
library(ggthemes)
imgs <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=373270992")
imgs |>
pivot_longer(3:5, names_to = "method",
values_to = "value") |>
ggplot(aes(method, value))+
geom_boxplot()
img1 <- imgs |>
ggplot(aes(Assess, LeafDoctor))+
geom_point()+
geom_smooth(method = "lm")
img2 <- imgs |>
ggplot(aes(Assess, ImageJ))+
geom_point()+
geom_smooth(method = "lm")
img3 <- imgs |>
ggplot(aes(ImageJ, LeafDoctor))+
geom_point()+
geom_smooth(method = "lm")
img1 + img2 + img3
imgs2 <- imgs |>
dplyr::select(3:5)
corgraph(imgs2)
cor.test(imgs$Assess, imgs$LeafDoctor)
cor(imgs$Assess, imgs$LeafDoctor)
cor_imgs2 <- cor(imgs2)
corrplot(cor_imgs2, method = "number", type = "lower")
cor_img2 <- cor(imgs)
cor_img2 <- cor(imgs2)
corrplot(cor_img, method = "square", type = "lower")
cor_img2 <- cor(imgs2)
corrplot(cor_imgs2, method = "square", type = "lower")
cor_img <- cor(imgs)
cor_img <- cor(imgs2)
corrplot(cor_imgs2, method = 'number', type = 'upper', diag = FALSE)
campo <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=866852711")
campo2 <- campo |>
dplyr::select(DFC, FER, PROD)
corgraph(campo2)
cor.test(campo2$PROD, campo2$DFC)
campo |>
ggplot(aes(DFC, PROD))+
geom_jitter()
cor.test(campo2$PROD, campo2$DFC)
campo <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=866852711")
campo2 <- campo |>
dplyr::select(DFC, FER, PROD)
corgraph(campo2)
BRA <- ne_states (country = "Brazil",
returnclass = "sf")
library(tidyverse)
library(gsheet)
library(rnaturalearth)
library(rnaturalearthhires)
library(ggspatial)
library(plotly)
library(leaflet)
library(r4pde)
library(ggthemes)
BRA <- ne_states (country = "Brazil",
returnclass = "sf")
world <- ne_countries()
ggplot(BRA) + geom_sf(fill = "white")
MG <- BRA |>
filter(name_en == "Minas Gerais")
MG
ggplot(MG) + geom_sf(fill = "white")
ggplot(TO) + geom_sf(fill = "white")
TO <- BRA |>
filter(name_en == "Tocantins")
ggplot(TO) + geom_sf(fill = "white")
sbr <- RustSoybean
sbr |>
ggplot(aes(longitude, latitude)) +
geom_point() +
coord_sf()
sbr <- RustSoybean
sbr |>
ggplot(aes(longitude, latitude)) +
geom_point() +
coord_sf()
bra <- ggplot(BRA) +
geom_sf(fill = "white",
color = "black",
linewidth = 0.5) +
geom_sf(data = MG, fill = "green") +
geom_sf(data = TO, fill = "blue") +
geom_point( data = sbr, aes(longitude, latitude),
color = "red") +
theme_map() +
annotation_north_arrow(which_north = "grid")
bra
ggplotly(bra)
bra <- ggplot(BRA) +
geom_sf(fill = "white",
color = "black",
linewidth = 0.5) +
geom_point( data = sbr, aes(longitude, latitude),
color = "red") +
theme_map() +
annotation_north_arrow(which_north = "grid")
bra
ggplotly(bra)
Viçosa_2 <- leaflet(sbr) |>
addTiles() |>
#addProviderTiles(providers$Esri.NatGeoWorldMap) |>
#setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
Viçosa_2
Viçosa_2 <- leaflet(sbr) |>
addTiles() |>
addCircleMarkers(radius = 2)
Viçosa_2
mapa <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1pAIFKsdKxk_UQQXdYwIO-O5NOkYNhpclImJcLziYnk4/edit?usp=sharing")
library(ggrepel) # Para adicionar textos que não se sobreponham aos pontos
library(scatterpie) # # Para criar gráficos de torta dispersos
mapa <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1pAIFKsdKxk_UQQXdYwIO-O5NOkYNhpclImJcLziYnk4/edit?usp=sharing")
Bra_2 <- ggplot(BRA) +
geom_sf(fill = "white", color = "black", linewidth = 0.5) +
coord_sf()+
geom_point(data = mapa, aes(lon, lat))+ # Plota pontos geoespaciais usando coordenadas de longitude e latitude do objeto 'mapa'.
geom_scatterpie(aes(x=lon, y=lat, r = 0.6),
alpha = 0.8, color = NA, data = mapa,
cols = c ("DFC",
"MA",
"FER",
"ANTR",
"OIDIO"))+ # Cria os gráficos de pizza
geom_text_repel(data = mapa, aes(lon, lat, label = Local),
size = 2, nudge_x = 0.2, nudge_y = 0.27, color = 'gray70', family = "Arial")+ # Adiciona rótulos de texto aos pontos, usando a coluna 'Local' para etiquetar cada ponto
scale_fill_calc()+
theme_map()+
labs(x = "Longitude", y = "Laititude", legend = "", fill = "Doença")+
theme(legend.position = "bottom", text = element_text(family = "Arieal", size = 8))
Bra_2
#Formato largo
escala2 <- escala |>
select(assessment, rater, acuracia) |>
pivot_wider(names_from = assessment, values_from = acuracia)
# Chunk 1
library(gsheet)
mg <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137")
# Chunk 2
library(tidyverse)
library(ggthemes)
mg |>
ggplot(aes(trat, comp))+
geom_boxplot(fill = "gray")+
theme_few()
# Chunk 3
# Passar os dados para o formato largo.
mg2 <- mg |>
pivot_wider(names_from = trat, values_from = comp)
mg2
# Chunk 4
# Primeira resposta
shapiro.test(mg2$control) # No teste de shapiro a H0 é de que a distribuição é normal.
# Chunk 5
#Segunda resposta
shapiro.test(mg2$Mg2)
# Chunk 6
hist(mg2$control)
# Chunk 7
hist(mg2$Mg2)
# Chunk 8
qqnorm(mg2$control)
qqline(mg2$control)
# Chunk 9
qqnorm(mg2$Mg2)
qqline(mg2$Mg2)
# Chunk 10
var.test(mg2$control, mg2$Mg2) # HO é que a variância é homogênea.
# Chunk 11
teste1 <- t.test(mg2$control, mg2$Mg2) #Pode usar 'var.equal = FALSE' quando a variância for heterogênea
# Chunk 12
library(report)
report(teste1)
# Chunk 13
escala <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1729131173")
#Vizualizar
escala |>
ggplot(aes(assessment, acuracia))+
geom_boxplot(fill = "gray")+
theme_few()
#Formato largo
escala2 <- escala |>
select(assessment, rater, acuracia) |>
pivot_wider(names_from = assessment, values_from = acuracia)
escala2
# Chunk 1
library(gsheet)
mg <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137")
# Chunk 2
library(tidyverse)
library(ggthemes)
mg |>
ggplot(aes(trat, comp))+
geom_boxplot(fill = "gray")+
theme_few()
# Chunk 3
# Passar os dados para o formato largo.
mg2 <- mg |>
pivot_wider(names_from = trat, values_from = comp)
mg2
# Chunk 4
# Primeira resposta
shapiro.test(mg2$control) # No teste de shapiro a H0 é de que a distribuição é normal.
# Chunk 5
#Segunda resposta
shapiro.test(mg2$Mg2)
# Chunk 6
hist(mg2$control)
# Chunk 7
hist(mg2$Mg2)
# Chunk 8
qqnorm(mg2$control)
qqline(mg2$control)
# Chunk 9
qqnorm(mg2$Mg2)
qqline(mg2$Mg2)
# Chunk 10
var.test(mg2$control, mg2$Mg2) # HO é que a variância é homogênea.
# Chunk 11
teste1 <- t.test(mg2$control, mg2$Mg2) #Pode usar 'var.equal = FALSE' quando a variância for heterogênea
# Chunk 12
library(report)
report(teste1)
# Chunk 13
escala <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1729131173")
#Vizualizar
escala |>
ggplot(aes(assessment, acuracia))+
geom_boxplot(fill = "gray")+
theme_few()
#Formato largo
escala2 <- escala |>
select(assessment, rater, acuracia) |>
pivot_wider(names_from = assessment, values_from = acuracia)
escala2
View(escala)
View(escala)
# Formato largo
escala2 <- escala |>
select(assessment, rater, acuracia) |>
pivot_wider(names_from = assessment, values_from = acuracia)
escala2
